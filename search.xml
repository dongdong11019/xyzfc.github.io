<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL优化之慢查询日志</title>
      <link href="/2019/08/28/MySQL%E4%BC%98%E5%8C%96%E4%B9%8B%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/"/>
      <url>/2019/08/28/MySQL%E4%BC%98%E5%8C%96%E4%B9%8B%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<p><strong>写在前面</strong>： <code>MySQL</code> 的慢查询日志是 <code>MySQL</code> 提供的一种日志记录，用于记录在 <code>MySQL</code> 中响应时间超过阈值的语句。即是指 ☞ 如果运行时间超过配置 <code>long_query_time</code> 值的 <code>SQL</code> 语句，则会被记录到慢查询日志中。</p><hr><p>1：查看 <code>MySQL</code> 服务器默认配置的 <code>long_query_time</code> 值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like 'long_query_time';</span><br><span class="line">+<span class="comment">-----------------+-----------+</span></span><br><span class="line">| Variable_name   | Value     |</span><br><span class="line">+<span class="comment">-----------------+-----------+</span></span><br><span class="line">| long_query_time | 10.000000 |</span><br><span class="line">+<span class="comment">-----------------+-----------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="string">``</span><span class="string">`   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2：查看及开启 **慢查询** 日志信息</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt; MySQL服务器配置文件详见 [MySQL 5.7.21-1配置文件my.cnf](https://inscode.github.io/2019/08/15/MySQL-5-7-21-1%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6my-cnf/)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="keyword">SQL</span></span><br><span class="line"><span class="comment">-- 查看</span></span><br><span class="line">mysql&gt; <span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%slow_query%'</span>;</span><br><span class="line">+<span class="comment">---------------------+---------------------------------+</span></span><br><span class="line">| Variable_name       | Value                           |</span><br><span class="line">+<span class="comment">---------------------+---------------------------------+</span></span><br><span class="line">| slow_query_log      | OFF                             |</span><br><span class="line">| slow_query_log_file | /var/lib/mysql/inscode-slow.log |</span><br><span class="line">+<span class="comment">---------------------+---------------------------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改 slow_query_log 相关配置，然后重启 MySQL</span></span><br><span class="line">slow_query_log        = <span class="number">1</span></span><br><span class="line">slow_query_log_file   = /<span class="keyword">var</span>/<span class="keyword">log</span>/mysql/mysql-slow.log</span><br></pre></td></tr></table></figure><p>3：捕获慢查询日志</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@inscode:/var/log/mysql&gt; tail -f mysql-slow.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># Time: 2019-08-28T15:08:48.983829Z   --SQL执行时间</span></span><br><span class="line"><span class="comment"># User@Host: root[root] @ localhost []  Id:     2   --执行sql的账户及连接信息</span></span><br><span class="line"><span class="comment">-- sql执行时长           --锁🔐时长           --返回的记录数       --查询检查的行数（为什么这个值会大于该表的总记录数呢？🤔🤔🤔）</span></span><br><span class="line"><span class="comment"># Query_time: 0.288241  Lock_time: 0.000526 Rows_sent: 204846  Rows_examined: 504870</span></span><br><span class="line"><span class="keyword">SET</span> <span class="built_in">timestamp</span>=<span class="number">1567004928</span>;   <span class="comment">--时间戳 2019-08-28 23:08:48</span></span><br><span class="line"><span class="comment">-- 超过MySQL服务器 long_query_time 时长的sql语句</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> employees <span class="keyword">where</span>  birth_date&gt;<span class="string">'1950'</span> <span class="keyword">and</span> first_name <span class="keyword">like</span> <span class="string">'%e%'</span> <span class="keyword">or</span> last_name <span class="keyword">like</span> <span class="string">'%a%'</span> <span class="keyword">and</span> hire_date&gt;<span class="string">'1986'</span> <span class="keyword">order</span> <span class="keyword">by</span> birth_date <span class="keyword">desc</span>, last_name <span class="keyword">asc</span>, hire_date <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Time: 2019-08-28T15:08:56.678322Z</span></span><br><span class="line"><span class="comment"># User@Host: root[root] @ localhost []  Id:     2</span></span><br><span class="line"><span class="comment"># Query_time: 0.287522  Lock_time: 0.000226 Rows_sent: 204846  Rows_examined: 504870</span></span><br><span class="line"><span class="keyword">SET</span> <span class="built_in">timestamp</span>=<span class="number">1567004936</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> employees <span class="keyword">where</span>  birth_date&gt;<span class="string">'1950'</span> <span class="keyword">and</span> first_name <span class="keyword">like</span> <span class="string">'%e%'</span> <span class="keyword">or</span> last_name <span class="keyword">like</span> <span class="string">'%a%'</span> <span class="keyword">and</span> hire_date&gt;<span class="string">'1986'</span> <span class="keyword">order</span> <span class="keyword">by</span> birth_date <span class="keyword">desc</span>, last_name <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure><p>4： <code>mysqldumpslow</code> 的使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">root@inscode:/etc/mysql/mysql.conf.d&gt; mysqldumpslow --help</span><br><span class="line">Usage: mysqldumpslow [ OPTS... ] [ LOGS... ]</span><br><span class="line"></span><br><span class="line">Parse and summarize the MySQL slow query log. Options are</span><br><span class="line"></span><br><span class="line">  --verbose    verbose</span><br><span class="line">  --debug      debug</span><br><span class="line">  --help       write this text to standard output</span><br><span class="line"></span><br><span class="line">  -v           verbose</span><br><span class="line">  -d           debug</span><br><span class="line">  -s ORDER     what to sort by (al, at, ar, c, l, r, t), &apos;at&apos; is default</span><br><span class="line">                al: average lock time   //评论锁定时间</span><br><span class="line">                ar: average rows sent   //评论返回时间</span><br><span class="line">                at: average query time  //平均执行时间</span><br><span class="line">                 c: count               //访问次数</span><br><span class="line">                 l: lock time           //锁定时间</span><br><span class="line">                 r: rows sent           //返回的记录行数</span><br><span class="line">                 t: query time          //查询时间</span><br><span class="line">  -r           reverse the sort order (largest last instead of first)</span><br><span class="line">  -t NUM       just show the top n queries</span><br><span class="line">  -a           don&apos;t abstract all numbers to N and strings to &apos;S&apos;</span><br><span class="line">  -n NUM       abstract numbers with at least n digits within names</span><br><span class="line">  -g PATTERN   grep: only consider stmts that include this string</span><br><span class="line">  -h HOSTNAME  hostname of db server for *-slow.log filename (can be wildcard),</span><br><span class="line">               default is &apos;*&apos;, i.e. match all</span><br><span class="line">  -i NAME      name of server instance (if using mysql.server startup script)</span><br><span class="line">  -l           don&apos;t subtract lock time from total time</span><br></pre></td></tr></table></figure><ul><li><p>获取 返回记录结果集最多的10个sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldumpslow -s r -t 10 /var/log/mysql/mysql-slow.log</span><br></pre></td></tr></table></figure></li><li><p>获取 访问次数最多的10个sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldumpslow -s c -t 10 /var/log/mysql/mysql-slow.log</span><br></pre></td></tr></table></figure></li><li><p>获取 按照时间排序的前10条中含有 “左连接” 的查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqldumpslow -s t -t 10 -g|"left join" /var/log/mysql/mysql-slow.log</span><br><span class="line"><span class="comment">-- 使用more 防止 爆屏</span></span><br><span class="line">mysqldumpslow -s t -t 10 -g|"left join" /var/log/mysql/mysql-slow.log | more</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL优化之orderBy优化</title>
      <link href="/2019/08/27/MySQL%E4%BC%98%E5%8C%96%E4%B9%8BorderBy%E4%BC%98%E5%8C%96/"/>
      <url>/2019/08/27/MySQL%E4%BC%98%E5%8C%96%E4%B9%8BorderBy%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p><strong>写在前面</strong>：<code>order by</code> 字句应该尽量使用 <code>Index</code> 方式排序，避免使用 <code>Filesort</code> 方式排序。</p><a id="more"></a><p>1： MySQL支持两种方式的排序: <code>Filesort</code> 和 <code>Index</code>。Index 效率高，因为MySQL扫描本身就能完成排序。<code>Filesort</code> 方式效率较低，因为它需要的索引的基础上再次排序。</p><p>2： order by 满足两种情况时会使用 <code>Index</code> 方式排序</p><ul><li><p>使用 <code>ORDER BY</code> 语句使用 <strong>索引最左前列</strong></p></li><li><p>使用 <code>Where</code> 字句和 <code>Order by</code> 字句的条件列组合满足  <strong>索引最左前列</strong></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> tableA <span class="keyword">where</span> age&gt;<span class="number">20</span> <span class="keyword">order</span> <span class="keyword">by</span> birth;</span><br></pre></td></tr></table></figure></li></ul><p>3：如果 <code>order by</code> 后的字段没有在索引列上，会产生 <code>Filesort</code>。<code>Filesort</code> 有两种算法：<strong>单路排序</strong> 和 <strong>双路排序</strong>。</p><ul><li><p>双路排序：扫描磁盘两次，最终得到数据。【两次I/O】</p><blockquote><p>从磁盘取出排序字段，在buffer中进行排序，再从磁盘取其他字段。</p></blockquote></li><li><p>单路排序：</p><blockquote><p>从磁盘读取查询所需要的 <strong>所有列</strong>，按照 order by 指定的列在 buffer 对它们进行排序，然后扫描排序后的列进行输出。单路排序的效率更快一些，它避免了第二次读取数据。并且把 <code>随机IO</code> 变成了 <code>顺序IO</code>。但是会带来使用更多的空间，因为他把每一行都保存在内存中。</p></blockquote><blockquote><p>单路排序算法失效：取出的所有列的大小超过了 <strong>sort_buffer_size</strong> 的容量，导致实际上每次只能按照 <strong>sort_buffer_size</strong> 的大小取数据进行排序，拍完序后再取 <strong>sort_buffer_size</strong> 容量大小的数据，在排序….如此往复，从而多次 I/O</p></blockquote><blockquote><p>优化策略：【调整 sort_buffer_size 参数的值】【调整max_length_for_sort_data 参数的值】</p></blockquote></li></ul><p>4：使用 <strong>order by</strong> 的一些优化策略</p><ul><li><p>1：order by 时 <code>select *</code>是不太好的工程实践。应该只查询需要的字段。</p><ul><li><p>原因1：当查询的子弹大小总和小于 <code>max_length_for_sort_data</code> 并没排序的字段不是 <code>text || bolb</code> 类型时，会使用单路排序算法，否则会使用多路排序算法</p></li><li><p>原因2：两种排序算法的数据都有可能超过 <code>sort_buffer_size</code> 的容量，超出之后，会创建 <code>tmp</code> 文件进行合并，从而导致多次 I/0。而使用单路排序算法出现的概率更多一些，所以要增加 <code>sort_buffer_size</code> 值大小。</p></li></ul></li><li><p>2：尝试提高 <code>sort_buffer_size</code> 参数的值</p></li><li><p>3：尝试提高 <code>max_length_for_sort_data</code> 参数的值</p></li></ul><p><img src="/images/blog/201908/8-order-by%E6%98%AF%E5%90%A6%E4%BD%BF%E7%94%A8%E7%B4%A2%E5%BC%95%E6%8E%92%E5%BA%8F%E5%88%86%E6%9E%90.jpeg" alt="order-by是否使用索引排序分析"></p><hr><p>数据准备</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建表语句</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tableA(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment,</span><br><span class="line">    age <span class="built_in">int</span>,</span><br><span class="line">    birth <span class="built_in">timestamp</span> <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">)<span class="keyword">default</span>  <span class="built_in">character</span> <span class="keyword">set</span> utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据插入</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tableA(age, birth) <span class="keyword">values</span>(<span class="number">22</span>, <span class="keyword">NOW</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tableA(age, birth) <span class="keyword">values</span>(<span class="number">23</span>, <span class="keyword">NOW</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tableA(age, birth) <span class="keyword">values</span>(<span class="number">24</span>, <span class="keyword">NOW</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tableA(age, birth) <span class="keyword">values</span>(<span class="number">25</span>, <span class="keyword">NOW</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tableA(age, birth) <span class="keyword">values</span>(<span class="number">26</span>, <span class="keyword">NOW</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tableA(age, birth) <span class="keyword">values</span>(<span class="number">27</span>, <span class="keyword">NOW</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 建立组合索引</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_ageBirth <span class="keyword">on</span> tableA(age,birth);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- order by排序字段顺序和索引字段顺序一致，不会产生文件排序</span></span><br><span class="line">mysql&gt; explain select * from tableA where age&gt;20 order by age,birth;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+--------------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type  | possible_keys | key          | key_len | ref  | rows | filtered | Extra                    |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+--------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | tableA | NULL       | index | idx_ageBirth  | idx_ageBirth | 9       | NULL |    6 |   100.00 | Using where; Using index |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+--------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- order by排序字段顺序和索引的顺序不一致，因此会产生文件排序。</span></span><br><span class="line">mysql&gt; explain select * from tableA where age&gt;20 order by birth;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+------------------------------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type  | possible_keys | key          | key_len | ref  | rows | filtered | Extra                                    |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+------------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | tableA | NULL       | index | idx_ageBirth  | idx_ageBirth | 9       | NULL |    6 |   100.00 | Using where; Using index; Using filesort |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- order by排序字段顺序和索引的顺序不一致，因此会产生文件排序。</span></span><br><span class="line">mysql&gt; explain select * from tableA where age&gt;20 order by birth,age;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+------------------------------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type  | possible_keys | key          | key_len | ref  | rows | filtered | Extra                                    |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+------------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | tableA | NULL       | index | idx_ageBirth  | idx_ageBirth | 9       | NULL |    6 |   100.00 | Using where; Using index; Using filesort |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- order by后不是同升同降都会使用到文件排序 Filesort</span></span><br><span class="line"><span class="comment">-- 索引是排好序的快速查找数据结构，不按照已经排序的规则去获取数据会产生文件内排序</span></span><br><span class="line">mysql&gt; explain select age,birth from tableA where birth&gt;"2019-08-27 21:52:08" order by age desc,birth asc;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+------------------------------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type  | possible_keys | key          | key_len | ref  | rows | filtered | Extra                                    |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+------------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | tableA | NULL       | index | NULL          | idx_ageBirth | 9       | NULL |    6 |    33.33 | Using where; Using index; Using filesort |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- order by后不是同升同降都会使用到文件排序 Filesort</span></span><br><span class="line">mysql&gt; explain select age,birth from tableA where birth&gt;"2019-08-27 21:52:08" order by age asc,birth desc;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+------------------------------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type  | possible_keys | key          | key_len | ref  | rows | filtered | Extra                                    |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+------------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | tableA | NULL       | index | NULL          | idx_ageBirth | 9       | NULL |    6 |    33.33 | Using where; Using index; Using filesort |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+--------------+---------+------+------+----------+------------------------------------------+</span></span><br></pre></td></tr></table></figure><hr><p><code>Group by</code> 的优化策略和原理和 <code>Order by</code> 趋同，唯一的一点是 <code>where</code> 条件优先级高于 <code>having</code>，能写在 <code>where</code> 限定的条件就不要去 <code>having</code> 限定。</p><hr><p>笔记来自 <a href="https://www.bilibili.com/video/av49181542/?p=226" target="_blank" rel="noopener">MySQL高级_为排序使用索引OrderBy</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL优化之小表驱动大表</title>
      <link href="/2019/08/26/MySQL%E4%BC%98%E5%8C%96%E4%B9%8B%E5%B0%8F%E8%A1%A8%E9%A9%B1%E5%8A%A8%E5%A4%A7%E8%A1%A8/"/>
      <url>/2019/08/26/MySQL%E4%BC%98%E5%8C%96%E4%B9%8B%E5%B0%8F%E8%A1%A8%E9%A9%B1%E5%8A%A8%E5%A4%A7%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p><strong>写在前面</strong>：前面学习了通过 <code>explain</code> 查看 <code>SQL</code> 语句的执行计划，然后对其进行必要的索引优化。那么我们又该怎么获取到这些 <code>SQL</code> 语句呢🤔🤔🤔？</p><a id="more"></a><h4 id="获取慢SQL的方法"><a href="#获取慢SQL的方法" class="headerlink" title="获取慢SQL的方法"></a>获取慢SQL的方法</h4><ul><li><p>1：开启慢查询日志，设置 <code>阈(yù)值</code>，比如超过 3 秒就定义为慢SQL，然后进行记录</p></li><li><p>2：观察。在指定的环境（生产）运动指定时间的应用程序，看看产生慢SQL的情况。</p></li><li><p>3：使用 <code>explain + 慢SQL</code> 查看SQL语句的执行计划进行分析。</p></li><li><p>4：<code>show profile</code> 查询 sql 语句在数据库服务器中的执行细节和生命周期情况。</p></li><li><p>5：MySQL 数据库服务器参数调优（这个基本和我们没有半毛钱关系）</p></li></ul><h4 id="优化原则之-小表驱动大表"><a href="#优化原则之-小表驱动大表" class="headerlink" title="优化原则之 小表驱动大表"></a>优化原则之 小表驱动大表</h4><blockquote><p>即是使用小的结果集驱动大的结果集。</p></blockquote><ul><li>当 B 表的数据集小于 A 表的数据集时，使用 <code>in</code> 优于 <code>exists</code>。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> A <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span>(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> B)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 等价于</span></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> B</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">select</span> * <span class="keyword">from</span> A <span class="keyword">where</span> A.id = B.id</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 外层 for 循环的次数越小越好</span></span><br></pre></td></tr></table></figure><ul><li>当 A 表的数据集小于 B 表的数据集时，使用 <code>exists</code> 优于 <code>in</code>。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> A <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> 常量（eg:<span class="number">1</span>) <span class="keyword">from</span> B <span class="keyword">WHERE</span> B.id = A.id);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 等价于</span></span><br><span class="line">for <span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> A</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">select</span> * <span class="keyword">from</span> B <span class="keyword">where</span> A.id = B.id</span><br></pre></td></tr></table></figure><p>当子查询需要用到主查询的数据的时候，主查询一次就执行一次子查询</p><ul><li>in 和 exists 的互转</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 数据准备</span></span><br><span class="line">mysql&gt; select * from websites;</span><br><span class="line"><span class="comment">-- 5 条记录</span></span><br><span class="line">+<span class="comment">----+--------------+---------------------------+-------+---------+</span></span><br><span class="line">| id | name         | url                       | alexa | country |</span><br><span class="line">+<span class="comment">----+--------------+---------------------------+-------+---------+</span></span><br><span class="line">|  1 | Google       | https://www.google.cm/    |     1 | USA     |</span><br><span class="line">|  2 | 淘宝          | https://www.taobao.com/   |    13 | CN      |</span><br><span class="line">|  3 | 菜鸟教程      | http://www.runoob.com/    |  4689 | CN      |</span><br><span class="line">|  4 | 微博          | http://weibo.com/         |    20 | CN      |</span><br><span class="line">|  5 | Facebook     | https://www.facebook.com/ |     3 | USA     |</span><br><span class="line">+<span class="comment">----+--------------+---------------------------+-------+---------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> access_log;</span><br><span class="line"><span class="comment">-- 12 条记录</span></span><br><span class="line">+<span class="comment">-----+---------+-------+------------+</span></span><br><span class="line">| aid | site_id | count | date       |</span><br><span class="line">+<span class="comment">-----+---------+-------+------------+</span></span><br><span class="line">|   1 |       1 |    45 | 2016-05-10 |</span><br><span class="line">|   2 |       3 |   100 | 2016-05-13 |</span><br><span class="line">|   3 |       1 |   230 | 2016-05-14 |</span><br><span class="line">|   4 |       2 |    10 | 2016-05-14 |</span><br><span class="line">|   5 |       5 |   205 | 2016-05-14 |</span><br><span class="line">|   6 |       4 |    13 | 2016-05-15 |</span><br><span class="line">|   7 |       3 |   220 | 2016-05-15 |</span><br><span class="line">|   8 |       5 |   545 | 2016-05-16 |</span><br><span class="line">|   9 |       3 |   201 | 2016-05-17 |</span><br><span class="line">|  10 |       6 |  2011 | 2016-05-17 |</span><br><span class="line">|  11 |       7 |  2012 | 2016-05-18 |</span><br><span class="line">|  12 |       8 |  2013 | 2016-05-19 |</span><br><span class="line">+<span class="comment">-----+---------+-------+------------+</span></span><br><span class="line">12 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询又那些站点被访问过</span></span><br><span class="line"></span><br><span class="line"><span class="comment">----使用 in</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> websites <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span> (<span class="keyword">select</span> site_id <span class="keyword">from</span> access_log);</span><br><span class="line">+<span class="comment">----+----------+---------------------------+-------+---------+</span></span><br><span class="line">| id | name     | url                       | alexa | country |</span><br><span class="line">+<span class="comment">----+----------+---------------------------+-------+---------+</span></span><br><span class="line">|  1 | Google   | https://www.google.cm/    |     1 | USA     |</span><br><span class="line">|  2 | 淘宝     | https://www.taobao.com/   |    13 | CN      |</span><br><span class="line">|  4 | 微博     | http://weibo.com/         |    20 | CN      |</span><br><span class="line">|  5 | Facebook | https://www.facebook.com/ |     3 | USA     |</span><br><span class="line">+<span class="comment">----+----------+---------------------------+-------+---------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">----查看执行计划</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> websites <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span> (<span class="keyword">select</span> site_id <span class="keyword">from</span> access_log);</span><br><span class="line">+<span class="comment">----+--------------+-------------+------------+--------+---------------+------------+---------+--------------------+------+----------+-------------+</span></span><br><span class="line">| id | select_type  | table       | partitions | type   | possible_keys | key        | key_len | ref                | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+--------------+-------------+------------+--------+---------------+------------+---------+--------------------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE       | websites    | NULL       | ALL    | PRIMARY       | NULL       | NULL    | NULL               |    5 |   100.00 | Using where |</span><br><span class="line">|  1 | SIMPLE       | &lt;subquery2&gt; | NULL       | eq_ref | &lt;auto_key&gt;    | &lt;auto_key&gt; | 4       | runoob.websites.id |    1 |   100.00 | NULL        |</span><br><span class="line">|  2 | MATERIALIZED | access_log  | NULL       | ALL    | NULL          | NULL       | NULL    | NULL               |   12 |   100.00 | NULL        |</span><br><span class="line">+<span class="comment">----+--------------+-------------+------------+--------+---------------+------------+---------+--------------------+------+----------+-------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">---- 使用 exists</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> websites <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> access_log <span class="keyword">where</span> websites.id=access_log.site_id);</span><br><span class="line">+<span class="comment">----+----------+---------------------------+-------+---------+</span></span><br><span class="line">| id | name     | url                       | alexa | country |</span><br><span class="line">+<span class="comment">----+----------+---------------------------+-------+---------+</span></span><br><span class="line">|  1 | Google   | https://www.google.cm/    |     1 | USA     |</span><br><span class="line">|  2 | 淘宝     | https://www.taobao.com/   |    13 | CN      |</span><br><span class="line">|  4 | 微博     | http://weibo.com/         |    20 | CN      |</span><br><span class="line">|  5 | Facebook | https://www.facebook.com/ |     3 | USA     |</span><br><span class="line">+<span class="comment">----+----------+---------------------------+-------+---------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">----查看执行计划</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> websites <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> access_log <span class="keyword">where</span> websites.id=access_log.site_id);</span><br><span class="line">+<span class="comment">----+--------------------+------------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">| id | select_type        | table      | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+--------------------+------------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">|  1 | PRIMARY            | websites   | NULL       | ALL  | NULL          | NULL | NULL    | NULL |    5 |   100.00 | Using where |</span><br><span class="line">|  2 | DEPENDENT SUBQUERY | access_log | NULL       | ALL  | NULL          | NULL | NULL    | NULL |   12 |    10.00 | Using where |</span><br><span class="line">+<span class="comment">----+--------------------+------------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span>, <span class="number">2</span> <span class="keyword">warnings</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><p>根据小表驱动大表的原则，上面的两个 <code>SQL语句</code> 第二个使用 <code>exists</code> 更合适</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL优化之索引使用原则</title>
      <link href="/2019/08/25/MySQL%E4%BC%98%E5%8C%96%E4%B9%8B%E7%B4%A2%E5%BC%95%E4%BD%BF%E7%94%A8%E5%8E%9F%E5%88%99/"/>
      <url>/2019/08/25/MySQL%E4%BC%98%E5%8C%96%E4%B9%8B%E7%B4%A2%E5%BC%95%E4%BD%BF%E7%94%A8%E5%8E%9F%E5%88%99/</url>
      
        <content type="html"><![CDATA[<p><strong>写在前面</strong>: 前面了解到索引是帮助 <code>MySQL</code> 高效获取数据的数据结构。那么在一个数据表查询应用中，我们是否应该使用索引？该怎样使用索引？什么场景下索引会失效？</p><a id="more"></a><p><strong>数据准备</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建表语句</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> staffs(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span> PRIMARY <span class="keyword">key</span> auto_increment,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">24</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'姓名'</span>,</span><br><span class="line">    age <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">0</span> <span class="keyword">comment</span> <span class="string">'年龄'</span>,</span><br><span class="line">    pos <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'职位'</span>,</span><br><span class="line">    add_time <span class="built_in">timestamp</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="keyword">current_timestamp</span> <span class="keyword">comment</span> <span class="string">'入职时间'</span></span><br><span class="line">)<span class="keyword">default</span> <span class="built_in">character</span> <span class="keyword">set</span> utf8mb4 <span class="keyword">comment</span> <span class="string">'员工记录表'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据插入</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> staffs(<span class="keyword">name</span>, age, pos, add_time)</span><br><span class="line"><span class="keyword">values</span></span><br><span class="line">(<span class="string">'z3'</span>, <span class="number">22</span>, <span class="string">'manager'</span>, <span class="keyword">now</span>()),</span><br><span class="line">(<span class="string">'July'</span>, <span class="number">23</span>, <span class="string">'dev'</span>, <span class="keyword">now</span>()),</span><br><span class="line">(<span class="string">'2000'</span>, <span class="number">23</span>, <span class="string">'dev'</span>, <span class="keyword">now</span>()),</span><br><span class="line">(<span class="string">'tom'</span>, <span class="number">2</span>, <span class="string">'pm'</span>, <span class="keyword">now</span>()),</span><br><span class="line">(<span class="string">'jerry'</span>, <span class="number">2</span>, <span class="string">'pm'</span>, <span class="keyword">now</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 建立组合索引</span></span><br><span class="line">mysql&gt; create index idx_staffs_nameAgePos on staffs(name,age,pos);</span><br></pre></td></tr></table></figure><hr><h4 id="1-索引使用原则"><a href="#1-索引使用原则" class="headerlink" title="1: 索引使用原则"></a>1: 索引使用原则</h4><ul><li><p>1：全值匹配我最爱</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 组合索引的所有字段全部使用到，全值匹配</span></span><br><span class="line">mysql&gt; explain select * from staffs where name='July' and age=23 and pos='dev';</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+-----------------------+---------+-------------------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys         | key                   | key_len | ref               | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+-----------------------+---------+-------------------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | ref  | idx_staffs_nameAgePos | idx_staffs_nameAgePos | 184     | const,const,const |    1 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+-----------------------+---------+-------------------+------+----------+-------+</span></span><br></pre></td></tr></table></figure></li><li><p>2：最左前缀原则【带头大哥不是死，中间兄弟👬不能断】</p><blockquote><p>如果使用了组合索引，要遵循最左前缀原则，查询从索引的最左前列开始并且不能跳过索引中的列。</p></blockquote></li><li><p>3：不要在索引列上做任何操作（计算，函数，「手动 | 自动」类型转换），会导致索引失效而转向全表扫描【索引列上少计算】</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 使用到了left()函数</span></span><br><span class="line">mysql&gt; explain select * from staffs where left(name,4) = "July";</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | ALL  | NULL          | NULL | NULL    | NULL |    5 |   100.00 | Using where |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>4：存储引擎不能使用索引中 <strong>范围条件(大于，小于…)</strong> 右边的列【范围之后全失效】</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 组合索引name,age的部分索引被用到</span></span><br><span class="line">mysql&gt; explain select * from staffs where name='July' and age&gt;20 and pos='dev';</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+-----------------------+-----------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type  | possible_keys         | key                   | key_len | ref  | rows | filtered | Extra                 |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+-----------------------+-----------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | range | idx_staffs_nameAgePos | idx_staffs_nameAgePos | 102     | NULL |    1 |    20.00 | Using index condition |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+-----------------------+-----------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>5：尽量使用覆盖索引(查询的列是索引的一部分)，减少 <code>select *</code> 使用</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 全表扫描</span></span><br><span class="line">mysql&gt; explain select * from staffs;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | ALL  | NULL          | NULL | NULL    | NULL |    5 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Extra 为 Using index, 使用到了覆盖索引</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> <span class="keyword">name</span>,age,pos <span class="keyword">from</span> staffs;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+-----------------------+---------+------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type  | possible_keys | key                   | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+-----------------------+---------+------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | index | NULL          | idx_staffs_nameAgePos | 184     | NULL |    5 |   100.00 | Using index |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+---------------+-----------------------+---------+------+------+----------+-------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 覆盖索引</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> <span class="keyword">name</span>,age,pos <span class="keyword">from</span> staffs <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'July'</span> <span class="keyword">and</span> age=<span class="number">22</span> <span class="keyword">and</span> pos=<span class="string">'dev'</span>;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+-----------------------+---------+-------------------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys         | key                   | key_len | ref               | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+-----------------------+---------+-------------------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | ref  | idx_staffs_nameAgePos | idx_staffs_nameAgePos | 184     | const,const,const |    1 |   100.00 | Using index |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+-----------------------+---------+-------------------+------+----------+-------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>6：在不使用覆盖索引的情况下，<code>MySQL</code> 在使用不等于运算符的时候无法使用索引会导致全表扫描，</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 这里查询的列都是索引的列，因此用到了覆盖索引</span></span><br><span class="line">mysql&gt; explain select name,age,pos from staffs where name != 'July';</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+-----------------------+-----------------------+---------+------+------+----------+--------------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type  | possible_keys         | key                   | key_len | ref  | rows | filtered | Extra                    |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+-----------------------+-----------------------+---------+------+------+----------+--------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | range | idx_staffs_nameAgePos | idx_staffs_nameAgePos | 98      | NULL |    4 |   100.00 | Using where; Using index |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+-----------------------+-----------------------+---------+------+------+----------+--------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用了不等运算，也没有使用到覆盖索引，因此会全表扫描</span></span><br><span class="line">mysql&gt; explain select * from staffs where name != 'July';</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys         | key  | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | ALL  | idx_staffs_nameAgePos | NULL | NULL    | NULL |    5 |    80.00 | Using where |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+------+---------+------+------+----------+-------------+</span></span><br></pre></td></tr></table></figure></li><li><p>7：<code>is null</code> 或者 <code>is not null</code> 也无法使用索引，所以建表时使用默认值</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- type 为 all, Extra 为 Using where</span></span><br><span class="line">mysql&gt; explain select * from staffs where name is not null;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys         | key  | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | ALL  | idx_staffs_nameAgePos | NULL | NULL    | NULL |    5 |    80.00 | Using where |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- type 为 null, Extra 为 Impossible WHERE</span></span><br><span class="line"><span class="comment">-- null 虽然无法使用索引但是 is null 速度是最快的❓</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> staffs <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">is</span> <span class="literal">null</span>;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------+</span></span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra            |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------+</span></span><br><span class="line">|  1 | SIMPLE      | NULL  | NULL       | NULL | NULL          | NULL | NULL    | NULL | NULL |     NULL | Impossible WHERE |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.02</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>8：<code>like</code> 以通配符 <code>%</code> 开头（<code>eg: like &#39;%abc&#39;</code>）的SQL语句索引失效会变成全表扫描</p><blockquote><p>解决方案：使用覆盖索引代替全表扫描</p></blockquote>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 索引失效，全表扫描</span></span><br><span class="line">mysql&gt; explain select * from staffs where name like '%July';</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | ALL  | NULL          | NULL | NULL    | NULL |    5 |    20.00 | Using where |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用部分索引</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> staffs <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'July%'</span>;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+-----------------------+-----------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type  | possible_keys         | key                   | key_len | ref  | rows | filtered | Extra                 |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+-----------------------+-----------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | range | idx_staffs_nameAgePos | idx_staffs_nameAgePos | 98      | NULL |    1 |   100.00 | Using index condition |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+-----------------------+-----------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 索引 KEY `idx_test03_c1234` (`c1`,`c2`,`c3`,`c4`)</span></span><br><span class="line"><span class="comment">-- 此时用到了组合索引的前三个列，c2 like 'a2%' 也是一种范围标识</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> test03 <span class="keyword">where</span> c1=<span class="string">'a1'</span>  <span class="keyword">and</span> c2 <span class="keyword">like</span> <span class="string">'a2%'</span>  <span class="keyword">and</span> c3=<span class="string">'a3'</span>;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+------------------+------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type  | possible_keys    | key              | key_len | ref  | rows | filtered | Extra                 |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+------------------+------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | range | idx_test03_c1234 | idx_test03_c1234 | 123     | NULL |    1 |    16.67 | Using index condition |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+------------------+------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><blockquote><p>假设索引为 index(a,b,c); 语句1：where a = 3 and b like ‘aa%’ and c=4 能用到索引 a b c；语句2：where a = 3 and b like ‘aa%bb%’ and c=4 也能用到索引 a b c；</p></blockquote></li><li><p>9：<strong>字符串不加单引号索引会失效</strong> 【数据类型被隐式转换】</p><blockquote><p>varchar 类型 使用时需要加上单引号。</p></blockquote>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 加了 单引号，和建表字段定义类型一致</span></span><br><span class="line">mysql&gt; explain select * from staffs where name='2000';</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+-----------------------+---------+-------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys         | key                   | key_len | ref   | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+-----------------------+---------+-------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | ref  | idx_staffs_nameAgePos | idx_staffs_nameAgePos | 98      | const |    1 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+-----------------------+---------+-------+------+----------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 建表name 字段是字符串类型，现在的查询是数值类型，索引失效</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> staffs <span class="keyword">where</span> <span class="keyword">name</span>=<span class="number">2000</span>;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys         | key  | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | ALL  | idx_staffs_nameAgePos | NULL | NULL    | NULL |    5 |    20.00 | Using where |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">3</span> <span class="keyword">warnings</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>10：尽可能少用 <code>or</code>，用它来连接时索引会失效。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 全表扫描</span></span><br><span class="line">mysql&gt; explain select * from staffs where name="July" or name = 'tom';</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys         | key  | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | staffs | NULL       | ALL  | idx_staffs_nameAgePos | NULL | NULL    | NULL |    5 |    40.00 | Using where |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+-----------------------+------+---------+------+------+----------+-------------+</span></span><br></pre></td></tr></table></figure></li></ul><hr><h4 id="2-索引使用示例"><a href="#2-索引使用示例" class="headerlink" title="2: 索引使用示例"></a>2: 索引使用示例</h4><p><strong>数据准备</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test03(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span> PRIMARY <span class="keyword">key</span> auto_increment,</span><br><span class="line">    c1 <span class="built_in">char</span>(<span class="number">10</span>),</span><br><span class="line">    c2 <span class="built_in">char</span>(<span class="number">10</span>),</span><br><span class="line">    c3 <span class="built_in">char</span>(<span class="number">10</span>),</span><br><span class="line">    c4 <span class="built_in">char</span>(<span class="number">10</span>),</span><br><span class="line">    c5 <span class="built_in">char</span>(<span class="number">10</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test03(c1,c2,c3,c4,c5)</span><br><span class="line"><span class="keyword">values</span></span><br><span class="line">(<span class="string">'a1'</span>,<span class="string">'a2'</span>,<span class="string">'a3'</span>,<span class="string">'a4'</span>,<span class="string">'a5'</span>),</span><br><span class="line">(<span class="string">'b1'</span>,<span class="string">'b2'</span>,<span class="string">'b3'</span>,<span class="string">'b4'</span>,<span class="string">'b5'</span>),</span><br><span class="line">(<span class="string">'c1'</span>,<span class="string">'c2'</span>,<span class="string">'c3'</span>,<span class="string">'c4'</span>,<span class="string">'c5'</span>),</span><br><span class="line">(<span class="string">'d1'</span>,<span class="string">'d2'</span>,<span class="string">'d3'</span>,<span class="string">'d4'</span>,<span class="string">'d5'</span>),</span><br><span class="line">(<span class="string">'e1'</span>,<span class="string">'e2'</span>,<span class="string">'e3'</span>,<span class="string">'e4'</span>,<span class="string">'e5'</span>),</span><br><span class="line">(<span class="string">'f1'</span>,<span class="string">'f2'</span>,<span class="string">'f3'</span>,<span class="string">'f4'</span>,<span class="string">'f5'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建索引</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_test03_c1234 <span class="keyword">on</span> test03(c1,c2,c3,c4);</span><br></pre></td></tr></table></figure><ul><li><p>1：索引全值匹配</p><blockquote><p>例如一个数据表建立的组合索引 idx_table_c1c2c3c4, 当查询条件为 <code>where c3=&#39;c3&#39; and c2=&#39;c2&#39;  and c4=&#39;c4&#39; and c1=&#39;c1&#39;;</code> 时查询优化器会自动调整和优化，此时等价于 <code>where c1=&#39;c1&#39; and c2=&#39;c2&#39;  and c4=&#39;c4&#39; and c3=&#39;c3&#39;;</code>。但是最佳实践是按照索引建立的顺序来使用，以此来减少底层优化器的工作量。</p></blockquote>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; explain select * from test03 where c1='c2'  and c2='c2' and c3='c3' and c4='c4';</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------------------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys    | key              | key_len | ref                     | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------------------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | ref  | idx_test03_c1234 | idx_test03_c1234 | 164     | const,const,const,const |    1 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------------------+------+----------+-------+</span></span><br></pre></td></tr></table></figure>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 注意现在的查询条件where 是 c1, c2, c4, c3</span></span><br><span class="line">mysql&gt; explain select * from test03 where c1='c1' and c2='c2'  and c4='c4' and c3='c3';</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------------------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys    | key              | key_len | ref                     | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------------------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | ref  | idx_test03_c1234 | idx_test03_c1234 | 164     | const,const,const,const |    1 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------------------+------+----------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注意现在的查询条件where 是 c3, c2, c4, c1</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> test03 <span class="keyword">where</span> c3=<span class="string">'c3'</span> <span class="keyword">and</span> c2=<span class="string">'c2'</span>  <span class="keyword">and</span> c4=<span class="string">'c4'</span> <span class="keyword">and</span> c1=<span class="string">'c1'</span>;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------------------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys    | key              | key_len | ref                     | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------------------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | ref  | idx_test03_c1234 | idx_test03_c1234 | 164     | const,const,const,const |    1 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------------------+------+----------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>2：使用到范围运算符时</p></li></ul><pre><code><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 使用到组合索引的前3个索引    </span></span><br><span class="line">mysql&gt; explain select * from test03 where c1='c2'  and c2='c2' and c3&gt;='c3' and c4='c4';</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+------------------+------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type  | possible_keys    | key              | key_len | ref  | rows | filtered | Extra                 |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+------------------+------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | range | idx_test03_c1234 | idx_test03_c1234 | 164     | NULL |    1 |    16.67 | Using index condition |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+------------------+------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用到了四个索引</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> test03 <span class="keyword">where</span> c1=<span class="string">'c2'</span>  <span class="keyword">and</span> c2=<span class="string">'c2'</span> <span class="keyword">and</span> c3=<span class="string">'c3'</span> <span class="keyword">and</span> c4&gt;=<span class="string">'c4'</span>;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+------------------+------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type  | possible_keys    | key              | key_len | ref  | rows | filtered | Extra                 |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+------------------+------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | range | idx_test03_c1234 | idx_test03_c1234 | 164     | NULL |    1 |   100.00 | Using index condition |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+-------+------------------+------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure></code></pre><ul><li><p>3：使用 <code>order by</code> 时</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 使用到组合索引的前三个，c3的作用是排序，只是没有下面的查找中</span></span><br><span class="line">mysql&gt; explain select * from test03 where c1='c2'  and c2='c2' and c4='c4' order by c3;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+-----------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys    | key              | key_len | ref         | rows | filtered | Extra                 |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+-----------------------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | ref  | idx_test03_c1234 | idx_test03_c1234 | 82      | const,const |    1 |    16.67 | Using index condition |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+-----------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 和上一个执行计划一致</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> test03 <span class="keyword">where</span> c1=<span class="string">'c2'</span>  <span class="keyword">and</span> c2=<span class="string">'c2'</span> <span class="keyword">order</span> <span class="keyword">by</span> c3;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+-----------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys    | key              | key_len | ref         | rows | filtered | Extra                 |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+-----------------------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | ref  | idx_test03_c1234 | idx_test03_c1234 | 82      | const,const |    1 |   100.00 | Using index condition |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+-----------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 此时只会使用到两个索引，然后C4条件没使用到索引，使用到了文件内排序 Using filesort</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> test03 <span class="keyword">where</span> c1=<span class="string">'c2'</span>  <span class="keyword">and</span> c2=<span class="string">'c2'</span> <span class="keyword">order</span> <span class="keyword">by</span> c4;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+---------------------------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys    | key              | key_len | ref         | rows | filtered | Extra                                 |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+---------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | ref  | idx_test03_c1234 | idx_test03_c1234 | 82      | const,const |    1 |   100.00 | Using index condition; Using filesort |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+---------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查找用到了一个索引，排序用到了 c2,c3, 此时无 Using filesort</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> test03 <span class="keyword">where</span> c1=<span class="string">'c1'</span>  <span class="keyword">and</span> c5=<span class="string">'c5'</span> <span class="keyword">order</span> <span class="keyword">by</span> c2,c3;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------+------+----------+------------------------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys    | key              | key_len | ref   | rows | filtered | Extra                              |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------+------+----------+------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | ref  | idx_test03_c1234 | idx_test03_c1234 | 41      | const |    1 |    16.67 | Using index condition; Using where |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------+------+----------+------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用到了组合索引的c1, 由于order by 的顺序没按照组合索引顺序来，因此出现了 Using filesort</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> test03 <span class="keyword">where</span> c1=<span class="string">'c1'</span>  <span class="keyword">and</span> c5=<span class="string">'c5'</span> <span class="keyword">order</span> <span class="keyword">by</span> c3,c2;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------+------+----------+----------------------------------------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys    | key              | key_len | ref   | rows | filtered | Extra                                              |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------+------+----------+----------------------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | ref  | idx_test03_c1234 | idx_test03_c1234 | 41      | const |    1 |    16.67 | Using index condition; Using where; Using filesort |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------+------+----------+----------------------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 索引用到了 c1，c2, 排序用到了c2,c3</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> test03 <span class="keyword">where</span> c1=<span class="string">'c1'</span>  <span class="keyword">and</span> c2=<span class="string">'c2'</span> <span class="keyword">order</span> <span class="keyword">by</span> c2,c3;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+-----------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys    | key              | key_len | ref         | rows | filtered | Extra                 |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+-----------------------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | ref  | idx_test03_c1234 | idx_test03_c1234 | 82      | const,const |    1 |   100.00 | Using index condition |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+-----------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查找用到了组合索引的c1,c2, 此时的查询条件中c2值是一个常量，order by 后的c2 为一个常量（固定值），此时对c2是否排序对整个sql无影响。  </span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> test03 <span class="keyword">where</span> c1=<span class="string">'c1'</span>  <span class="keyword">and</span> c2=<span class="string">'c2'</span> <span class="keyword">and</span> c5=<span class="string">'c5'</span> <span class="keyword">order</span> <span class="keyword">by</span> c3,c2;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+------------------------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys    | key              | key_len | ref         | rows | filtered | Extra                              |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | ref  | idx_test03_c1234 | idx_test03_c1234 | 82      | const,const |    1 |    16.67 | Using index condition; Using where |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用到了一个索引</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> c1,c2,c3 <span class="keyword">from</span> test03 <span class="keyword">where</span> c1=<span class="string">'a1'</span>  <span class="keyword">and</span> c4=<span class="string">'a4'</span> <span class="keyword">group</span> <span class="keyword">by</span> c2,c3;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------+------+----------+--------------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys    | key              | key_len | ref   | rows | filtered | Extra                    |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------+------+----------+--------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | ref  | idx_test03_c1234 | idx_test03_c1234 | 41      | const |    1 |    16.67 | Using where; Using index |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------+------+----------+--------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 出现了文件排序，使用到了临时表 ,</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> c1,c2,c3 <span class="keyword">from</span> test03 <span class="keyword">where</span> c1=<span class="string">'a1'</span>  <span class="keyword">and</span> c4=<span class="string">'a4'</span> <span class="keyword">group</span> <span class="keyword">by</span> c3,c2;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------+------+----------+-----------------------------------------------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys    | key              | key_len | ref   | rows | filtered | Extra                                                     |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------+------+----------+-----------------------------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | ref  | idx_test03_c1234 | idx_test03_c1234 | 41      | const |    1 |    16.67 | Using where; Using index; Using temporary; Using filesort |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------+------+----------+-----------------------------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 针对上一个执行计划优化如下新增 c2 = 'a2'</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> c1,c2,c3 <span class="keyword">from</span> test03 <span class="keyword">where</span> c1=<span class="string">'a1'</span>  <span class="keyword">and</span> c2=<span class="string">'a2'</span>  <span class="keyword">and</span> c4=<span class="string">'a4'</span> <span class="keyword">group</span> <span class="keyword">by</span> c3,c2;</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+--------------------------+</span></span><br><span class="line">| id | select_type | table  | partitions | type | possible_keys    | key              | key_len | ref         | rows | filtered | Extra                    |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+--------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | test03 | NULL       | ref  | idx_test03_c1234 | idx_test03_c1234 | 82      | const,const |    1 |    16.67 | Using where; Using index |</span><br><span class="line">+<span class="comment">----+-------------+--------+------------+------+------------------+------------------+---------+-------------+------+----------+--------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- group by 基本上都需要排序，会有临时表产生。</span></span><br></pre></td></tr></table></figure></li></ul><hr><h4 id="3-索引使用的一般性建议"><a href="#3-索引使用的一般性建议" class="headerlink" title="3: 索引使用的一般性建议"></a>3: 索引使用的一般性建议</h4><ul><li><p>对于单值索引，尽量选择针对当前查询 <strong>过滤性更好</strong> 的索引</p></li><li><p>在选用组合索引的时候，当前查询中，<strong>过滤性最好（越好）</strong> 的字段在组合索引字段顺序中，<strong>位置越靠前越好</strong></p></li><li><p>在选择组合索引的时候，尽量选择能够包含当前查询的 <code>where</code> 字句中更多字段的索引。</p></li><li><p>尽可能通过分析统计信息和调整 <code>query</code> 的写法来达到选择适合索引的目的</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL性能优化之Explain索引优化实例</title>
      <link href="/2019/08/24/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8B%E9%80%9A%E8%BF%87Explain%E8%BF%9B%E8%A1%8C%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96/"/>
      <url>/2019/08/24/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8B%E9%80%9A%E8%BF%87Explain%E8%BF%9B%E8%A1%8C%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p><strong>写在前面</strong>: 前面了解 <code>Explain</code> 的基础知识，接下来我们通过好一些案列来实操一下，通过实践加深对前面两篇笔记的了解。</p><a id="more"></a><hr><h4 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">exlain <span class="keyword">select</span> d1.name, (<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t3) d2</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">id</span>, <span class="keyword">name</span> <span class="keyword">from</span> t1 <span class="keyword">where</span> other_colume = <span class="string">''</span>) d1</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">name</span>, <span class="keyword">id</span> <span class="keyword">from</span> t2);</span><br></pre></td></tr></table></figure><p>依据 explain 中 <code>id</code>值可知执行先后顺序分别是 <strong>4 &gt; 3 &gt; 2 &gt; 1 &gt; NULL</strong>。说明如下</p><p><img src="/images/blog/201908/7-explain%E6%89%A7%E8%A1%8C%E6%A1%88%E4%BE%8B%E4%B8%80.png" alt></p><blockquote><p>执行顺序1（id为4）: select_type为<code>UNION</code>，执行的SQL为<code>select name, id from t2</code></p></blockquote><blockquote><p>执行顺序2（id为3）: select_type为<code>DERIVED</code>，由于SQL查询解析时是从<code>from</code>开始，后面紧接着的sql查询语句又包含在<code>from</code>中，因此select_type为<code>DERIVED</code>。执行SQL为<code>select id, name from t1 where other_colume = &#39;&#39;</code></p></blockquote><blockquote><p>执行顺序3（id为2）: select_type为<code>SUBQUERY</code>，执行的SQL为<code>select id from t3</code></p></blockquote><blockquote><p>执行顺序4（id为1）: select_type列值为<code>PRIMARY</code>表示该查询为外层查询，table列标识为<code>&lt;derived3&gt;</code>表示查询的结果来自于一个衍生表，<code>&lt;derived3&gt;</code>中的3表示该查询衍生自第<code>id为3</code>的查询。</p></blockquote><blockquote><p>执行顺序4（id为1）: select_type列值为<code>UNION RESULT</code>表示从临时查询结果集中读取行，table列值为<code>&lt;union 1,4&gt;</code> 表示对id为1和4的两个select结果进行<code>UNION</code>操作。</p></blockquote><hr><h4 id="案例二-之-单表优化"><a href="#案例二-之-单表优化" class="headerlink" title="案例二 之 单表优化"></a>案例二 之 单表优化</h4><p>数据准备</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建表语句</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> article(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> PRIMARY <span class="keyword">key</span> auto_increment,</span><br><span class="line">    author_id <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'作者id'</span>,</span><br><span class="line">    category_id <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'分类id'</span>,</span><br><span class="line">    views <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'查看次数'</span>,</span><br><span class="line">    comments <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'评论次数'</span>,</span><br><span class="line">    title <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'文章标题'</span>,</span><br><span class="line">    <span class="keyword">content</span> <span class="built_in">text</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'内容'</span></span><br><span class="line">)<span class="keyword">default</span> <span class="built_in">character</span> <span class="keyword">set</span> utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据插入</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> article(author_id, category_id, views, comments, title, <span class="keyword">content</span>)</span><br><span class="line"><span class="keyword">values</span></span><br><span class="line">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">'标题1'</span>,<span class="string">'内容1'</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="string">'标题2'</span>,<span class="string">'内容2'</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="string">'标题3'</span>,<span class="string">'内容3'</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="string">'标题4'</span>,<span class="string">'内容4'</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="string">'标题5'</span>,<span class="string">'内容5'</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="string">'标题6'</span>,<span class="string">'内容6'</span>);</span><br></pre></td></tr></table></figure><ul><li><p>查询 category_id 为1 且 comments 大于1情况下, views 最多的article_id</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询sql</span></span><br><span class="line">mysql&gt; select id,author_id from article where category_id=1 and comments&gt;1 order by views desc limit 1;</span><br><span class="line">+<span class="comment">----+-----------+</span></span><br><span class="line">| id | author_id |</span><br><span class="line">+<span class="comment">----+-----------+</span></span><br><span class="line">|  3 |         1 |</span><br><span class="line">+<span class="comment">----+-----------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看执行计划，得到如下可优化点</span></span><br><span class="line"><span class="comment">---- 1：type 为 ALL 全表扫描；</span></span><br><span class="line"><span class="comment">---- 2：Extra 出现了 Using filesort</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> <span class="keyword">id</span>,author_id <span class="keyword">from</span> article <span class="keyword">where</span> category_id=<span class="number">1</span> <span class="keyword">and</span> comments&gt;<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> views <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">1</span>;</span><br><span class="line">+<span class="comment">----+-------------+---------+------------+------+---------------+------+---------+------+------+----------+-----------------------------+</span></span><br><span class="line">| id | select_type | table   | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra                       |</span><br><span class="line">+<span class="comment">----+-------------+---------+------------+------+---------------+------+---------+------+------+----------+-----------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | article | NULL       | ALL  | NULL          | NULL | NULL    | NULL |    6 |    16.67 | Using where; Using filesort |</span><br><span class="line">+<span class="comment">----+-------------+---------+------------+------+---------------+------+---------+------+------+----------+-----------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 尝试优化</span></span><br><span class="line"><span class="comment">---- 根据查询条件建立组合索引：</span></span><br><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">index</span> idx_article_ccv <span class="keyword">on</span> article(category_id,comments,views);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看刚建的索引</span></span><br><span class="line">mysql&gt; show index from article;</span><br><span class="line">+<span class="comment">---------+------------+-----------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line">| Table   | Non_unique | Key_name        | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | <span class="keyword">Comment</span> | Index_comment |</span><br><span class="line">+<span class="comment">---------+------------+-----------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line">| article |          <span class="number">0</span> | PRIMARY         |            <span class="number">1</span> | <span class="keyword">id</span>          | A         |           <span class="number">6</span> |     <span class="literal">NULL</span> | <span class="literal">NULL</span>   |      | BTREE      |         |               |</span><br><span class="line">| article |          <span class="number">1</span> | idx_article_ccv |            <span class="number">1</span> | category_id | A         |           <span class="number">5</span> |     <span class="literal">NULL</span> | <span class="literal">NULL</span>   |      | BTREE      |         |               |</span><br><span class="line">| article |          <span class="number">1</span> | idx_article_ccv |            <span class="number">2</span> | comments    | A         |           <span class="number">6</span> |     <span class="literal">NULL</span> | <span class="literal">NULL</span>   |      | BTREE      |         |               |</span><br><span class="line">| article |          <span class="number">1</span> | idx_article_ccv |            <span class="number">3</span> | views       | A         |           <span class="number">6</span> |     <span class="literal">NULL</span> | <span class="literal">NULL</span>   |      | BTREE      |         |               |</span><br><span class="line">+<span class="comment">---------+------------+-----------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 再次执行刚才的查询SQL</span></span><br><span class="line"><span class="comment">---- 1: type 由 ALL 变成了 range</span></span><br><span class="line"><span class="comment">---- 2: Extra 还是出现了 Using filesort, //看来还得优化</span></span><br><span class="line"><span class="comment">---- 3: MySQL 无法再对后面 view 部分进行检索，即是range 类型查询字段后面的字段无效</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> <span class="keyword">id</span>,author_id <span class="keyword">from</span> article <span class="keyword">where</span> category_id=<span class="number">1</span> <span class="keyword">and</span> comments&gt;<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> views <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">1</span>;</span><br><span class="line">+<span class="comment">----+-------------+---------+------------+-------+-----------------+-----------------+---------+------+------+----------+---------------------------------------+</span></span><br><span class="line">| id | select_type | table   | partitions | type  | possible_keys   | key             | key_len | ref  | rows | filtered | Extra                                 |</span><br><span class="line">+<span class="comment">----+-------------+---------+------------+-------+-----------------+-----------------+---------+------+------+----------+---------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | article | NULL       | range | idx_article_ccv | idx_article_ccv | 8       | NULL |    1 |   100.00 | Using index condition; Using filesort |</span><br><span class="line">+<span class="comment">----+-------------+---------+------------+-------+-----------------+-----------------+---------+------+------+----------+---------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除之前所建立的索引</span></span><br><span class="line">mysql&gt; <span class="keyword">drop</span> <span class="keyword">index</span> idx_article_ccv <span class="keyword">on</span> article;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 再次尝试建立索引</span></span><br><span class="line"><span class="comment">---- 根据查询条件建立组合索引，这次去掉 comments</span></span><br><span class="line">mysql&gt; create index idx_article_cv on article(category_id,views);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 再次查询执行计划</span></span><br><span class="line"><span class="comment">---- type 变为了ref</span></span><br><span class="line"><span class="comment">---- ref  变为le const</span></span><br><span class="line"><span class="comment">---- Extra 没有 Using filesort</span></span><br><span class="line">mysql&gt; explain select id,author_id from article where category_id=1 and comments&gt;1 order by views desc limit 1;</span><br><span class="line">+<span class="comment">----+-------------+---------+------------+------+----------------+----------------+---------+-------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table   | partitions | type | possible_keys  | key            | key_len | ref   | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+---------+------------+------+----------------+----------------+---------+-------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | article | NULL       | ref  | idx_article_cv | idx_article_cv | 4       | const |    2 |    33.33 | Using where |</span><br><span class="line">+<span class="comment">----+-------------+---------+------------+------+----------------+----------------+---------+-------+------+----------+-------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><hr><h4 id="案例三-之-双表优化"><a href="#案例三-之-双表优化" class="headerlink" title="案例三 之 双表优化"></a>案例三 之 双表优化</h4><p>数据准备</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建表语句</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">class</span> (</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> PRIMARY <span class="keyword">key</span> auto_increment,</span><br><span class="line">    card <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'分类id'</span></span><br><span class="line">)<span class="keyword">default</span> <span class="built_in">character</span> <span class="keyword">set</span> utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> book (</span><br><span class="line">    bookid <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> PRIMARY <span class="keyword">key</span> auto_increment,</span><br><span class="line">    card <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'分类id'</span></span><br><span class="line">)<span class="keyword">default</span> <span class="built_in">character</span> <span class="keyword">set</span> utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据插入</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">class</span>(<span class="keyword">id</span>,card)</span><br><span class="line"><span class="keyword">values</span></span><br><span class="line">(<span class="number">1</span>,<span class="number">10</span>),(<span class="number">2</span>,<span class="number">7</span>),(<span class="number">3</span>,<span class="number">3</span>),(<span class="number">4</span>,<span class="number">13</span>),(<span class="number">5</span>,<span class="number">17</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="number">4</span>),(<span class="number">7</span>,<span class="number">9</span>),(<span class="number">8</span>,<span class="number">13</span>),(<span class="number">9</span>,<span class="number">19</span>),(<span class="number">10</span>,<span class="number">16</span>),</span><br><span class="line">(<span class="number">11</span>,<span class="number">20</span>),(<span class="number">12</span>,<span class="number">13</span>),(<span class="number">13</span>,<span class="number">3</span>),(<span class="number">14</span>,<span class="number">15</span>),(<span class="number">15</span>,<span class="number">5</span>),</span><br><span class="line">(<span class="number">16</span>,<span class="number">20</span>),(<span class="number">17</span>,<span class="number">6</span>),(<span class="number">18</span>,<span class="number">9</span>),(<span class="number">19</span>,<span class="number">6</span>),(<span class="number">20</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据插入</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book(bookid,card)</span><br><span class="line"><span class="keyword">values</span></span><br><span class="line">(<span class="number">1</span>,<span class="number">2</span>),(<span class="number">2</span>,<span class="number">18</span>),(<span class="number">3</span>,<span class="number">3</span>),(<span class="number">4</span>,<span class="number">2</span>),(<span class="number">5</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="number">15</span>),(<span class="number">7</span>,<span class="number">11</span>),(<span class="number">8</span>,<span class="number">13</span>),(<span class="number">9</span>,<span class="number">8</span>),(<span class="number">10</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">11</span>,<span class="number">13</span>),(<span class="number">12</span>,<span class="number">14</span>),(<span class="number">13</span>,<span class="number">10</span>),(<span class="number">14</span>,<span class="number">7</span>),(<span class="number">15</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">16</span>,<span class="number">16</span>),(<span class="number">17</span>,<span class="number">10</span>),(<span class="number">18</span>,<span class="number">3</span>),(<span class="number">19</span>,<span class="number">5</span>),(<span class="number">20</span>,<span class="number">14</span>);</span><br><span class="line"></span><br><span class="line">mysql&gt; explain select * from class left join book on class.card=book.card;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------------------------------------------+</span></span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra                                              |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | class | NULL       | ALL  | NULL          | NULL | NULL    | NULL |   20 |   100.00 | NULL                                               |</span><br><span class="line">|  1 | SIMPLE      | book  | NULL       | ALL  | NULL          | NULL | NULL    | NULL |   20 |   100.00 | Using where; Using join buffer (Block Nested Loop) |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------------------------------------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 先假设给class 的card加索引</span></span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">index</span> idx_card <span class="keyword">on</span> <span class="keyword">class</span>(card);</span><br><span class="line"></span><br><span class="line">mysql&gt; explain select * from class left join book on class.card=book.card and class.id&gt;0;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+----------------------------------------------------+</span></span><br><span class="line">| id | select_type | table | partitions | type  | possible_keys | key      | key_len | ref  | rows | filtered | Extra                                              |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+----------------------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | class | NULL       | index | NULL          | idx_card | 4       | NULL |   20 |   100.00 | Using index                                        |</span><br><span class="line">|  1 | SIMPLE      | book  | NULL       | ALL   | NULL          | NULL     | NULL    | NULL |   20 |   100.00 | Using where; Using join buffer (Block Nested Loop) |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+----------------------------------------------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除 idx_card 然后在 book表上加索引试试</span></span><br><span class="line">mysql&gt; <span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">class</span> <span class="keyword">drop</span> <span class="keyword">index</span> idx_card;</span><br><span class="line">mysql&gt; create index idx_card on book(card);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看一下执行计划</span></span><br><span class="line"><span class="comment">-- 对比上一个执行计划，type 由 ALL 变为了 ref，ref列值指向runoob.class.card，rows 由 20 + 20变为 20+1</span></span><br><span class="line">mysql&gt; explain select * from class left join book on book.card=class.card;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+----------+---------+-------------------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key      | key_len | ref               | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+----------+---------+-------------------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | class | NULL       | ALL  | NULL          | NULL     | NULL    | NULL              |   20 |   100.00 | NULL        |</span><br><span class="line">|  1 | SIMPLE      | book  | NULL       | ref  | idx_card      | idx_card | 4       | runoob.class.card |    1 |   100.00 | Using index |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+----------+---------+-------------------+------+----------+-------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用右链接查询时</span></span><br><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">index</span> idx_card <span class="keyword">on</span> book(card);</span><br><span class="line"></span><br><span class="line">mysql&gt; explain select * from book right join class on book.card=class.card;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+----------+---------+-------------------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key      | key_len | ref               | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+----------+---------+-------------------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | class | NULL       | ALL  | NULL          | NULL     | NULL    | NULL              |   20 |   100.00 | NULL        |</span><br><span class="line">|  1 | SIMPLE      | book  | NULL       | ref  | idx_card      | idx_card | 4       | runoob.class.card |    1 |   100.00 | Using index |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+----------+---------+-------------------+------+----------+-------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>结论：Left join 条件用于确定如何从 <strong>右表</strong> 搜索行（因为左表都是匹配的），所以右表一定要建立索引。换句话说 “左连接因为主表必定全部扫描，子表不一定全部对应，所以加在子表好一些”。</p><p><img src="https://www.runoob.com/wp-content/uploads/2019/01/sql-join.png" alt></p><hr><h4 id="案例三-之-三表优化"><a href="#案例三-之-三表优化" class="headerlink" title="案例三 之 三表优化"></a>案例三 之 三表优化</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建表语句</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> phone (</span><br><span class="line">    phoneid <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> PRIMARY <span class="keyword">key</span> auto_increment,</span><br><span class="line">    card <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'分类id'</span></span><br><span class="line">)<span class="keyword">default</span> <span class="built_in">character</span> <span class="keyword">set</span> utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据插入</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> phone(phoneid,card)</span><br><span class="line"><span class="keyword">values</span></span><br><span class="line">(<span class="number">1</span>,<span class="number">16</span>),(<span class="number">2</span>,<span class="number">17</span>),(<span class="number">3</span>,<span class="number">17</span>),(<span class="number">4</span>,<span class="number">14</span>),(<span class="number">5</span>,<span class="number">16</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="number">20</span>),(<span class="number">7</span>,<span class="number">11</span>),(<span class="number">8</span>,<span class="number">15</span>),(<span class="number">9</span>,<span class="number">3</span>),(<span class="number">10</span>,<span class="number">7</span>),</span><br><span class="line">(<span class="number">11</span>,<span class="number">5</span>),(<span class="number">12</span>,<span class="number">5</span>),(<span class="number">13</span>,<span class="number">7</span>),(<span class="number">14</span>,<span class="number">3</span>),(<span class="number">15</span>,<span class="number">11</span>),</span><br><span class="line">(<span class="number">16</span>,<span class="number">4</span>),(<span class="number">17</span>,<span class="number">9</span>),(<span class="number">18</span>,<span class="number">12</span>),(<span class="number">19</span>,<span class="number">13</span>),(<span class="number">20</span>,<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">---------------------------------------</span></span><br><span class="line"><span class="comment">-- 查看原始执行计划</span></span><br><span class="line">mysql&gt; explain select * from class left join book on class.card = book.card left join phone on class.card = phone.card;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------------------------------------------+</span></span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra                                              |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | class | NULL       | ALL  | NULL          | NULL | NULL    | NULL |   20 |   100.00 | NULL                                               |</span><br><span class="line">|  1 | SIMPLE      | book  | NULL       | ALL  | NULL          | NULL | NULL    | NULL |   20 |   100.00 | Using where; Using join buffer (Block Nested Loop) |</span><br><span class="line">|  1 | SIMPLE      | phone | NULL       | ALL  | NULL          | NULL | NULL    | NULL |   20 |   100.00 | Using where; Using join buffer (Block Nested Loop) |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 根据案例二的经验增加如下索引</span></span><br><span class="line"></span><br><span class="line">mysql&gt; create index idx_b_card on book(card);</span><br><span class="line"></span><br><span class="line">mysql&gt; create index idx_p_card on phone(card);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询增加索引后的执行计划</span></span><br><span class="line"></span><br><span class="line"><span class="comment">---- 最后两个type 均是 ref, rows = 20 + 1 + 1</span></span><br><span class="line"></span><br><span class="line">mysql&gt; explain select * from class left join book on class.card = book.card left join phone on class.card = phone.card;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------------+---------+-------------------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key        | key_len | ref               | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------------+---------+-------------------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | class | NULL       | ALL  | NULL          | NULL       | NULL    | NULL              |   20 |   100.00 | NULL        |</span><br><span class="line">|  1 | SIMPLE      | book  | NULL       | ref  | idx_b_card    | idx_b_card | 4       | runoob.class.card |    1 |   100.00 | Using index |</span><br><span class="line">|  1 | SIMPLE      | phone | NULL       | ref  | idx_p_card    | idx_p_card | 4       | runoob.class.card |    1 |   100.00 | Using index |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------------+---------+-------------------+------+----------+-------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><hr><p>【SQL 优化结论】</p><ul><li><p>尽可能减少 Join 语句中的 <code>Nested Loop</code> (嵌套循环)。</p></li><li><p>优先 <code>Nested Loop</code> 中的内层循</p></li><li><p>永远用小结果集驱动大的结果集。</p></li><li><p>当无法保证被驱动表的 Join 条件字段被索引且内存资源充足的前提下，不要太吝啬 <code>JoinBuffer</code> 设置</p></li></ul><hr><p><a href="https://www.bilibili.com/video/av49181542/?p=208" target="_blank" rel="noopener">参考来源：bilibili.MySQL高级_explain之热身Case</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL性能优化之Explain浅析（下）</title>
      <link href="/2019/08/20/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8BExplain%E6%B5%85%E6%9E%90%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
      <url>/2019/08/20/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8BExplain%E6%B5%85%E6%9E%90%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><strong>写在前面</strong>: 接上篇 <a href="https://inscode.github.io/2019/08/19/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8BExplain%E6%B5%85%E6%9E%90%EF%BC%88%E4%B8%8A%EF%BC%89/">MySQL性能优化之Explain浅析（上）</a>。</p><a id="more"></a><hr><h4 id="1-explain-的使用及其字段说明"><a href="#1-explain-的使用及其字段说明" class="headerlink" title="1: explain 的使用及其字段说明"></a>1: explain 的使用及其字段说明</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 得到的执行计划如下表</span></span><br><span class="line">mysql&gt; explain select * from employees;</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table     | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | employees | NULL       | ALL  | NULL          | NULL | NULL    | NULL |  107 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h5 id="1-1-possible-keys-字段"><a href="#1-1-possible-keys-字段" class="headerlink" title="1.1: possible_keys 字段"></a>1.1: possible_keys 字段</h5><p><strong>含义或用途</strong>: 显示可能应用到这张表中的一个或多个索引。查询涉及到的字段上若存在索引，则该索引列被列出，但是该索引列不一定被实际使用。</p><h5 id="1-2-keys-字段"><a href="#1-2-keys-字段" class="headerlink" title="1.2: keys 字段"></a>1.2: keys 字段</h5><p><strong>含义或用途</strong>: 实际使用的索引。如果为Null，则没有使用索引。若查询中使用了覆盖索引，则该索引仅出现在 <code>key</code> 列中。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; explain select department_id,location_id from departments;</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+-------+---------------+-----------+---------+------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table       | partitions | type  | possible_keys | key       | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+-------+---------------+-----------+---------+------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | departments | NULL       | index | NULL          | loc_id_fk | 5       | NULL |   27 |   100.00 | Using index |</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+-------+---------------+-----------+---------+------+------+----------+-------------+</span></span><br></pre></td></tr></table></figure><h5 id="1-3-key-len-字段"><a href="#1-3-key-len-字段" class="headerlink" title="1.3: key_len 字段"></a>1.3: key_len 字段</h5><p><strong>含义或用途</strong>: 表示索引中实际用到的字节数，可通过该列计算查询中使用的索引长度。在不损失精度的情况下，长度越短越好。<code>key_len</code> 显示的值为索引字段的最大可能长度，<strong>并非实际使用长度</strong>，即 <code>key_len</code> 是根据表定义计算而得，不是通过表内检索而得。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一个查询条件</span></span><br><span class="line">mysql&gt; explain select * from employees where job_id="IT_PROG";</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+-----------+---------+-------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table     | partitions | type | possible_keys | key       | key_len | ref   | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+-----------+---------+-------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | employees | NULL       | ref  | job_id_fk     | job_id_fk | 23      | const |    5 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+-----------+---------+-------+------+----------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 两个查询条件</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> employees <span class="keyword">where</span> job_id=<span class="string">"IT_PROG"</span> <span class="keyword">and</span> employee_id&gt;<span class="number">100</span>;</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+-------+-------------------+-----------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">| id | select_type | table     | partitions | type  | possible_keys     | key       | key_len | ref  | rows | filtered | Extra                 |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+-------+-------------------+-----------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">|  1 | SIMPLE      | employees | NULL       | range | PRIMARY,job_id_fk | job_id_fk | 27      | NULL |    5 |   100.00 | Using index condition |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+-------+-------------------+-----------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h5 id="1-4-ref-字段"><a href="#1-4-ref-字段" class="headerlink" title="1.4: ref 字段"></a>1.4: ref 字段</h5><p><strong>含义或用途</strong>: 显示索引的那一列被使用了，如果可能的话，是一个常数，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- employees.job_id='AC_MGR'解析为一个常量const</span></span><br><span class="line">mysql&gt; explain select * from employees,departments where employees.department_id = departments.department_id and employees.job_id='AC_MGR';</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+--------+----------------------+-----------+---------+-------------------------------------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table       | partitions | type   | possible_keys        | key       | key_len | ref                                 | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+--------+----------------------+-----------+---------+-------------------------------------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | employees   | NULL       | ref    | dept_id_fk,job_id_fk | job_id_fk | 23      | const                               |    1 |   100.00 | Using where |</span><br><span class="line">|  1 | SIMPLE      | departments | NULL       | eq_ref | PRIMARY              | PRIMARY   | 4       | myemployees.employees.department_id |    1 |   100.00 | NULL        |</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+--------+----------------------+-----------+---------+-------------------------------------+------+----------+-------------+</span></span><br></pre></td></tr></table></figure><h5 id="1-5-rows-字段"><a href="#1-5-rows-字段" class="headerlink" title="1.5: rows 字段"></a>1.5: rows 字段</h5><p><strong>含义或用途</strong>: 每张表有多少行被优化器查询（值越少越好）。此数字是估算值，可能并不总是准确的</p><h5 id="1-6-Extra-字段"><a href="#1-6-Extra-字段" class="headerlink" title="1.6: Extra 字段"></a>1.6: Extra 字段</h5><ul><li><p><code>Using filesort</code>: 说明 <code>MySQL</code> 会对数据使用一个 <strong>外部的索引排序</strong>，而不是按照表内的索引顺序进行读取。<code>MySQL</code> 中无法利用索引完成的排序称之为 <strong>文件排序</strong>。出现时表示需要优化了</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show index from apps;</span><br><span class="line">+<span class="comment">-------+------------+--------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line">| Table | Non_unique | Key_name                 | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | <span class="keyword">Comment</span> | Index_comment |</span><br><span class="line">+<span class="comment">-------+------------+--------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line">| apps  |          <span class="number">0</span> | PRIMARY                  |            <span class="number">1</span> | <span class="keyword">id</span>          | A         |           <span class="number">5</span> |     <span class="literal">NULL</span> | <span class="literal">NULL</span>   |      | BTREE      |         |               |</span><br><span class="line">| apps  |          <span class="number">1</span> | idx_url_country_language |            <span class="number">1</span> | <span class="keyword">url</span>         | A         |           <span class="number">5</span> |     <span class="literal">NULL</span> | <span class="literal">NULL</span>   |      | BTREE      |         |               |</span><br><span class="line">| apps  |          <span class="number">1</span> | idx_url_country_language |            <span class="number">2</span> | country     | A         |           <span class="number">5</span> |     <span class="literal">NULL</span> | <span class="literal">NULL</span>   |      | BTREE      |         |               |</span><br><span class="line">| apps  |          <span class="number">1</span> | idx_url_country_language |            <span class="number">3</span> | <span class="keyword">language</span>    | A         |           <span class="number">5</span> |     <span class="literal">NULL</span> | <span class="literal">NULL</span>   |      | BTREE      |         |               |</span><br><span class="line">+<span class="comment">-------+------------+--------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 组合索引是 idx_url_country_language， 下面的SQL 中间隔了组合索引的 country 字段</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> apps <span class="keyword">where</span> <span class="keyword">url</span>=<span class="string">"https://golang.org"</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">language</span>;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+--------------------------+--------------------------+---------+-------+------+----------+---------------------------------------+</span></span><br><span class="line">| id | select_type | table | partitions | type | possible_keys            | key                      | key_len | ref   | rows | filtered | Extra                                 |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+--------------------------+--------------------------+---------+-------+------+----------+---------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | apps  | NULL       | ref  | idx_url_country_language | idx_url_country_language | 767     | const |    1 |   100.00 | Using index condition; Using filesort |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+--------------------------+--------------------------+---------+-------+------+----------+---------------------------------------+</span></span><br><span class="line"></span><br><span class="line">mysql&gt; explain select * from apps where url="https://golang.org" order by country,language;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+--------------------------+--------------------------+---------+-------+------+----------+-----------------------+</span></span><br><span class="line">| id | select_type | table | partitions | type | possible_keys            | key                      | key_len | ref   | rows | filtered | Extra                 |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+--------------------------+--------------------------+---------+-------+------+----------+-----------------------+</span></span><br><span class="line">|  1 | SIMPLE      | apps  | NULL       | ref  | idx_url_country_language | idx_url_country_language | 767     | const |    1 |   100.00 | Using index condition |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+--------------------------+--------------------------+---------+-------+------+----------+-----------------------+</span></span><br></pre></td></tr></table></figure></li><li><p><code>Using temporary</code>: 使用临时表保存中间查询结果，MySQL 在对结果排序时使用临时表，常见于排序 <code>order by</code> 和 分组查询 <code>group by</code>。出现时表示 <strong>急需优化</strong> 了</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; explain select country from apps group by country;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+-------+--------------------------+--------------------------+---------+------+------+----------+----------------------------------------------+</span></span><br><span class="line">| id | select_type | table | partitions | type  | possible_keys            | key                      | key_len | ref  | rows | filtered | Extra                                        |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+-------+--------------------------+--------------------------+---------+------+------+----------+----------------------------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | apps  | NULL       | index | idx_url_country_language | idx_url_country_language | 895     | NULL |    5 |   100.00 | Using index; Using temporary; Using filesort |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+-------+--------------------------+--------------------------+---------+------+------+----------+----------------------------------------------+</span></span><br></pre></td></tr></table></figure></li><li><p><code>Using index</code>: 表示相应的 select 操作使用了覆盖索引（<code>Covering index</code>）,避免访问表的数据行，效率还阔以。如果还同时出现了 <code>using where</code>，表明索引还被用来执行索引值的查找。如果没有同时出现 <code>using where</code>，表明索引只是用来读取数据而非执行查询操作。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; explain select employee_id from employees where employee_id order by  employee_id;</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+------+------+----------+--------------------------+</span></span><br><span class="line">| id | select_type | table     | partitions | type  | possible_keys | key     | key_len | ref  | rows | filtered | Extra                    |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+------+------+----------+--------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | employees | NULL       | index | NULL          | PRIMARY | 4       | NULL |  107 |    90.00 | Using where; Using index |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+------+------+----------+--------------------------+</span></span><br></pre></td></tr></table></figure><pre><code>覆盖索引：MySQL 可以利用索引返回 `select` 查询的字段，而不必根据索引再次去读取数据文件。也就是说查询的列是索引的一部分，那么查询就只在索引上进行。</code></pre></li><li><p><code>using join buffer</code>: 使用了连接缓存</p></li><li><p><code>impossible where</code>: where 字句的值总是 false，不能用来获取任何元祖</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; explain select * from employees where employee_id= 1 and employee_id=2;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------+</span></span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra            |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------+</span></span><br><span class="line">|  1 | SIMPLE      | NULL  | NULL       | NULL | NULL          | NULL | NULL    | NULL | NULL |     NULL | Impossible WHERE |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------+</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL性能优化之Explain浅析（上）</title>
      <link href="/2019/08/19/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8BExplain%E6%B5%85%E6%9E%90%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
      <url>/2019/08/19/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8BExplain%E6%B5%85%E6%9E%90%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><strong>写在前面</strong>: 在软件开发中，遵循着 <code>first finish then perfect</code> 的原则。前期我们往往会更加关注程序功能的实现，编写的 <code>SQL</code> 语句也多为满足业务所需的增删改查。如果运气还不错，业务做起来了，数据量达到一定量级时，我们发现一个请求的响应时间会越来越难以接受，其中某些不再合理的 <code>SQL</code> 往往会成为整个请求响应中性能消耗大户，甚至成为性能瓶颈，那么此时对 <code>SQL</code> 语句的优化就显得格外重要了。要优化 <code>SQL</code> 就需要定位 <code>SQL</code> 存在的问题。<code>MySQL</code> 提供了 <code>explain  + sql</code> 命令来获取 <code>SQL</code> 语句执行计划的信息，包括有关如何连接表以及以何种顺序连接表。以下为 <code>explain</code> 学习中所做笔记，记录于此📝以便今后翻阅。</p><p>鉴于篇幅: 这里记录截至 <code>explain</code> 中 <code>type</code> 前的字段</p><a id="more"></a><p>备注: 文中用到的sql数据来自 <a href="https://github.com/inscode/inscode.github.io/blob/master/blog/source/static/myemployees.sql" target="_blank" rel="noopener">employees.sql</a></p><hr><h4 id="1-explain-能获取到那些信息？"><a href="#1-explain-能获取到那些信息？" class="headerlink" title="1: explain 能获取到那些信息？"></a>1: explain 能获取到那些信息？</h4><ul><li><p>表的读取顺序</p></li><li><p>表数据读取操作（<code>select</code>）的类型</p></li><li><p>那些所有阔以被使用</p></li><li><p>那些索引实际被使用</p></li><li><p>表之间的引用</p></li><li><p>每张表有多少行被优化器查询</p></li></ul><h4 id="2-explain-的使用及其字段说明"><a href="#2-explain-的使用及其字段说明" class="headerlink" title="2: explain 的使用及其字段说明"></a>2: explain 的使用及其字段说明</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 得到的执行计划如下表</span></span><br><span class="line">mysql&gt; explain select * from employees;</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table     | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | employees | NULL       | ALL  | NULL          | NULL | NULL    | NULL |  107 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h5 id="2-1-id-字段"><a href="#2-1-id-字段" class="headerlink" title="2.1: id 字段"></a>2.1: id 字段</h5><p><strong>含义或用途</strong>: select 查询的序列号，包含一组数字，表示查询中执行 select 字句或是操作表的顺序</p><p><strong>id 的三种情形</strong></p><ul><li><p>id 相同，执行顺序自上而下</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询员工名，部门名</span></span><br><span class="line">mysql&gt; explain SELECT employees.employee_id,employees.last_name, departments.department_name</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; inner join departments</span><br><span class="line">    -&gt; on employees.department_id = departments.department_id;</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+------+---------------+------------+---------+---------------------------------------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table       | partitions | type | possible_keys | key        | key_len | ref                                   | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+------+---------------+------------+---------+---------------------------------------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | departments | NULL       | ALL  | PRIMARY       | NULL       | NULL    | NULL                                  |   27 |   100.00 | NULL  |</span><br><span class="line">|  1 | SIMPLE      | employees   | NULL       | ref  | dept_id_fk    | dept_id_fk | 5       | myemployees.departments.department_id |    9 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+------+---------------+------------+---------+---------------------------------------+------+----------+-------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>  说明: 表读取顺序是先 <code>departments</code> 后 <code>departments</code>。</p></li><li><p>id 不同，如果是子查询，id 的序号会递增，id 值越大其优先级越高，就越先被执行。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mysql&gt; explain select * from employees where salary = (select max(salary) from employees);</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table     | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">|  1 | PRIMARY     | employees | NULL       | ALL  | NULL          | NULL | NULL    | NULL |  107 |    10.00 | Using where |</span><br><span class="line">|  2 | SUBQUERY    | employees | NULL       | ALL  | NULL          | NULL | NULL    | NULL |  107 |   100.00 | NULL        |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>  说明: 表执行顺序是先执行 id 为 2 的子查询后执行 id 为 1 的主查询。</p></li><li><p>id 相同不同，同时存在（❓这是什么鬼👻）</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; 没找到例子，下面就只表示一下了😂😂😂(只关注 id 就行)</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table     | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">|  1 | PRIMARY     | employees | NULL       | ALL  | NULL          | NULL | NULL    | NULL |  107 |    10.00 | Using where |</span><br><span class="line">|  1 | PRIMARY     | employees | NULL       | ALL  | NULL          | NULL | NULL    | NULL |  107 |   100.00 | NULL        |</span><br><span class="line">|  2 | SUBQUERY    | employees | NULL       | ALL  | NULL          | NULL | NULL    | NULL |  107 |   100.00 | NULL        |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>  说明: id 字段中数字大的先执行，即是 <code>2先执行</code>，然后存在两个评价的 1，按 <code>自上而下的先后顺序执行</code>。</p></li></ul><h5 id="2-2-select-type-字段"><a href="#2-2-select-type-字段" class="headerlink" title="2.2: select_type 字段"></a>2.2: <code>select_type</code> 字段</h5><p><strong>含义或用途</strong>: 表示 <code>SELECT</code> 的类型，主要用于区别 普通查询、联合查询、子查询等复杂查询。常见的取值如下</p><ul><li><p><strong>1-SIMPLE:</strong>  简单 select 查询，不包含子查询或者连接查询（union）</p></li><li><p><strong>2-PRIMARY:</strong>  主查询，即是外层的查询（查询中包含了子查询），PRIMARY 是最后加载的查询</p></li><li><p><strong>3-SUBQUERY:</strong>  在 SELECT 或 where 查询包含了 子查询</p></li><li><p><strong>4-DERIVED:</strong>  在 From 列表中包含的子查询被标记为 DEVIRED(衍生)。MySQL会递归执行这些子查询，把结果放在临时表中（会增加系统消耗）</p></li><li><p><strong>5-UNION:</strong>  若第二个 SELECT 出现在 UNION 之后，则标记为 UNION; 若 UNION 包含在 FROM 字句的子查询中，外层的 SELECT 被标记 DEVIRED</p></li><li><p><strong>6-UNION RESULT:</strong>  两种 UNION 结果的合并</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; explain select * from employees where email like '%a%' union select * from employees where department_id&gt;90;</span><br><span class="line">+<span class="comment">----+--------------+------------+------------+-------+---------------+------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">| id  | select_type  | table      | partitions | type  | possible_keys | key        | key_len | ref  | rows | filtered | Extra                 |</span><br><span class="line">+<span class="comment">-----+--------------+------------+------------+-------+---------------+------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">|  1  | PRIMARY      | employees  | NULL       | ALL   | NULL          | NULL       | NULL    | NULL |  107 |    11.11 | Using where           |</span><br><span class="line">|  2  | UNION        | employees  | NULL       | range | dept_id_fk    | dept_id_fk | 5       | NULL |    8 |   100.00 | Using index condition |</span><br><span class="line">| NULL| UNION RESULT | &lt;union1,2&gt; | NULL       | ALL   | NULL          | NULL       | NULL    | NULL | NULL |     NULL | Using temporary       |</span><br><span class="line">+<span class="comment">----+--------------+------------+------------+-------+---------------+------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-3-table-字段"><a href="#2-3-table-字段" class="headerlink" title="2.3: table 字段"></a>2.3: <code>table</code> 字段</h5><p><strong>含义或用途</strong>: 输出结果集的表（查询结果的来源表）</p><h5 id="2-4-type-字段"><a href="#2-4-type-字段" class="headerlink" title="2.4: type 字段"></a>2.4: <code>type</code> 字段</h5><p><strong>含义或用途</strong>: 显示查询使用了何种连接类型。结果值从最好到最坏依次如下，通常来说保证 type 值能达到 Range。</p><p><strong><code>system</code> &gt; <code>const</code> &gt; <code>eq_ref</code> &gt; <code>ref</code> &gt; <code>range</code> &gt; <code>index</code> &gt; <code>all</code></strong></p><ul><li><p><strong>1-system:</strong>  单表只有一行记录（等于系统表），是const连接类型的特例。可以忽略不计</p></li><li><p><strong>2-const:</strong>  该表最多只有一个匹配行，在查询开头读取。因为只有一行，所以优化器的其余部分可以将此行中列的值视为常量。const表非常快，因为它们只读一次。const 将 PRIMARY KEY或 UNIQUE索引的所有部分与常量值进行比较时使用。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 主键 employee_id = 100 是一个常量，对应一条记录， type 为 const</span></span><br><span class="line">mysql&gt; explain select * from (select * from employees where employee_id = 100) as tmp;</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+-------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table     | partitions | type  | possible_keys | key     | key_len | ref   | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+-------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | employees | NULL       | const | PRIMARY       | PRIMARY | 4       | const |    1 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+-------+------+----------+-------+</span></span><br></pre></td></tr></table></figure></li><li><p><strong>3-eq_ref:</strong>  唯一性索引（<code>PRIMARY KEY</code> 或 <code>UNIQUE NOT NULL</code>）扫描，对于每个索引键，表中只有一个记录与之匹配。常见于主键或唯一索引</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- job_id='AC_MGR' 在employees表中只有一条记录;</span></span><br><span class="line">mysql&gt; explain select * from employees,departments where employees.job_id='AC_MGR' and departments.department_id = employees.department_id;</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+--------+----------------------+-----------+---------+-------------------------------------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table       | partitions | type   | possible_keys        | key       | key_len | ref                                 | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+--------+----------------------+-----------+---------+-------------------------------------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | employees   | NULL       | ref    | dept_id_fk,job_id_fk | job_id_fk | 23      | const                               |    1 |   100.00 | Using where |</span><br><span class="line">|  1 | SIMPLE      | departments | NULL       | eq_ref | PRIMARY              | PRIMARY   | 4       | myemployees.employees.department_id |    1 |   100.00 | NULL        |</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+--------+----------------------+-----------+---------+-------------------------------------+------+----------+-------------+</span></span><br></pre></td></tr></table></figure></li><li><p><strong>4-ref:</strong>  非唯一性索引扫描, 返回匹配某个单独值的所有行记录。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- job_id 是一个索引，配置job_id = 'SA_REP' 的所有记录</span></span><br><span class="line">mysql&gt; explain select * from employees where job_id='SA_REP';</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+-----------+---------+-------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table     | partitions | type | possible_keys | key       | key_len | ref   | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+-----------+---------+-------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | employees | NULL       | ref  | job_id_fk     | job_id_fk | 23      | const |   30 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+------+---------------+-----------+---------+-------+------+----------+-------+</span></span><br></pre></td></tr></table></figure></li><li><p><strong>5-range:</strong> 索引仅检索给定范围内的行，使用索引选择行   </p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 使用 =， &lt;&gt;， &gt;， &gt;=， &lt;， &lt;=， IS NULL， &lt;=&gt;， BETWEEN， LIKE，或 IN()运算符</span></span><br><span class="line">mysql&gt; explain select * from employees where employee_id&gt;100;</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table     | partitions | type  | possible_keys | key     | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | employees | NULL       | range | PRIMARY       | PRIMARY | 4       | NULL |  106 |   100.00 | Using where |</span><br><span class="line">+<span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+------+------+----------+-------------+</span></span><br></pre></td></tr></table></figure></li><li><p><strong>6-index:</strong> <code>index</code> 与 <code>all</code> 的区别为 <code>index</code> 类型只遍历索引数🌲，所以比 <code>all</code> 快。因为索引文件通常比数据文件小，虽然两者都是扫描全表，但是 <code>index</code> 从索引中读取，而 <code>all</code> 是从硬盘中读取。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看表 departments 的索引情况</span></span><br><span class="line">mysql&gt; show index from departments;</span><br><span class="line">+<span class="comment">-------------+------------+-----------+--------------+---------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line">| Table       | Non_unique | Key_name  | Seq_in_index | Column_name   | Collation | Cardinality | Sub_part | Packed | Null | Index_type | <span class="keyword">Comment</span> | Index_comment |</span><br><span class="line">+<span class="comment">-------------+------------+-----------+--------------+---------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line">| departments |          <span class="number">0</span> | PRIMARY   |            <span class="number">1</span> | department_id | A         |          <span class="number">27</span> |     <span class="literal">NULL</span> | <span class="literal">NULL</span>   |      | BTREE      |         |               |</span><br><span class="line">| departments |          <span class="number">1</span> | loc_id_fk |            <span class="number">1</span> | location_id   | A         |           <span class="number">7</span> |     <span class="literal">NULL</span> | <span class="literal">NULL</span>   | YES  | BTREE      |         |               |</span><br><span class="line">+<span class="comment">-------------+------------+-----------+--------------+---------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 覆盖索引</span></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> department_id, location_id <span class="keyword">from</span> departments;</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+-------+---------------+-----------+---------+------+------+----------+-------------+</span></span><br><span class="line">| id | select_type | table       | partitions | type  | possible_keys | key       | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+-------+---------------+-----------+---------+------+------+----------+-------------+</span></span><br><span class="line">|  1 | SIMPLE      | departments | NULL       | index | NULL          | loc_id_fk | 5       | NULL |   27 |   100.00 | Using index |</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+-------+---------------+-----------+---------+------+------+----------+-------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- manager_id不是索引字段</span></span><br><span class="line">mysql&gt; explain select department_id, location_id, manager_id from departments;</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table       | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | departments | NULL       | ALL  | NULL          | NULL | NULL    | NULL |   27 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+-------------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">explain select * from employees where salary=&apos;20000&apos;;</span><br></pre></td></tr></table></figure><hr><p>未完待续</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学思维修炼一: 数据的表示</title>
      <link href="/2019/08/18/%E6%95%B0%E5%AD%A6%E6%80%9D%E7%BB%B4%E4%BF%AE%E7%82%BC%E4%B8%80-%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA/"/>
      <url>/2019/08/18/%E6%95%B0%E5%AD%A6%E6%80%9D%E7%BB%B4%E4%BF%AE%E7%82%BC%E4%B8%80-%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<p>写在前面: 以下为书籍📚 <strong>《程序员的数学思维修炼》</strong> 第1章 <strong>&lt;数据的表示&gt;</strong> 读书记录。</p><a id="more"></a><h3 id="1-8-和-8-0-相等吗？含义相同吗？"><a href="#1-8-和-8-0-相等吗？含义相同吗？" class="headerlink" title="1: 8 和 8.0 相等吗？含义相同吗？"></a>1: 8 和 8.0 相等吗？含义相同吗？</h3><ul><li><p>从数值大小比较来说，8.0 和 8 是相等的。</p></li><li><p>在近似数的表示中，数字 8 表示数据值精确到个位，如 7.9、8.2 等数精确到个位都表示为 8。而 8.0 则表示数据精确到十分位（小数点后一位），如 8.02、7.99 等精确到十分位都表示为 8.0。因此从这个角度看两者是不同的</p></li><li><p>ps: 看问题得分场景❓❓❓</p></li></ul><h3 id="2-进制的表示"><a href="#2-进制的表示" class="headerlink" title="2: 进制的表示"></a>2: 进制的表示</h3><p><strong>2.1: 二人类为什么习惯十进制？</strong></p><ul><li><p>人类最开始计数时，首先想到的是用 <code>数手指</code> 的方式来计数，满 10 个以后再借一双手，这种 <code>便捷性</code> 使得人类习惯于使用十进制。</p></li><li><p>十进制对比其他进制（如二进制）更简洁，更易识别。</p></li></ul><p><strong>2.2: 计算机为什么要使用二进制？</strong></p><ul><li><p>如果计算机使用 <code>十进制</code>，那么需要让电脑能识别 <code>十进制</code> 中的十个数字。假设最高电压是 <code>12V</code>，那么10个数字中每个数码（0~9）分配到的电压区间是 <code>12 / 9 ≈ 1.3(v)</code>。这样导致数码之间的电压间隔小，如果外界干扰造成电压大幅变化，数据标识就不太准确了。另外最大的问题是硬件上要标识十种状态的话，其电路构造的复杂度就非常复杂了</p></li><li><p>二进制的技术实现比较简单。逻辑电路通常就只有两种状态 [开 or 关]</p></li><li><p>运算规则简单，利于简化计算机内部结构，提高运算速度</p></li><li><p>适合于逻辑运算</p></li><li><p>二进制易于和别的进制进行转换</p></li><li><p>抗干扰能力强👍。因为每位数码只有高低两种状态，当受到一定程度的干扰时，仍能可靠的分辨出是 <code>高电平</code>还是 <code>低电平</code>    </p></li></ul><p><strong>2.3: 二进制的运算</strong></p><ul><li><p>加法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0 + 0 = 0</span><br><span class="line">0 + 1 = 1</span><br><span class="line">1 + 0 = 1</span><br><span class="line">1 + 1 = 10(逢2进1)</span><br></pre></td></tr></table></figure></li><li><p>减法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0 - 0 = 0</span><br><span class="line">0 - 1 = 1（借1当2）</span><br><span class="line">1 - 0 = 1</span><br><span class="line">1 - 1 = 0</span><br></pre></td></tr></table></figure></li><li><p>乘法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0 * 0 = 0</span><br><span class="line">0 * 1 = 0</span><br><span class="line">1 * 0 = 0</span><br><span class="line">1 * 1 = 1</span><br></pre></td></tr></table></figure></li><li><p>除法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0 / 0 (无意义)</span><br><span class="line">0 / 1 = 0</span><br><span class="line">1 / 0 (无意义)</span><br><span class="line">1 / 1 = 1</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 索引那些事儿一</title>
      <link href="/2019/08/17/MySQL-%E7%B4%A2%E5%BC%95%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
      <url>/2019/08/17/MySQL-%E7%B4%A2%E5%BC%95%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</url>
      
        <content type="html"><![CDATA[<p><strong>索引定义</strong>: 索引是帮助 <code>MySQL</code> 高效获取数据的 <strong>数据结构</strong>（官方）。简单理解就是 <code>排好序的快速查找数据结构</code>。</p><a id="more"></a><p>在数据库系统中，除了保存数据之外，数据库系统还维护着 <code>满足特定查找算法</code> 的 <code>数据结构</code>，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查找算法，这种数据结构就成为索引。</p><p>通常来说索引本身也是会占用很大的存储空间，不可能全部存储在内存中。因此索引往往以索引文件形式存储在磁盘上。</p><h4 id="一-索引优缺点"><a href="#一-索引优缺点" class="headerlink" title="一: 索引优缺点"></a>一: 索引优缺点</h4><ul><li><p>优点:</p><ul><li><p>类似于书籍的目录索引，提高了数据检索的效率，降低数据库 <code>IO</code> 成本</p></li><li><p>通过索引列对数据进行排序，降低数据排序的成本，从而降低 <code>CPU</code> 计算的消耗</p></li></ul></li><li><p>缺点:</p><ul><li><p>实际上 <code>索引也是一张表</code>，该表保留了主键和索引字段，并指向实体表的记录。</p></li><li><p>索引虽然提高了查询速度，但同时也降低了更新表的速度，如当对表进行 insert, update, delete 操作时。因为更新表时，需要重建索引。</p></li></ul></li></ul><h4 id="二-索引分类"><a href="#二-索引分类" class="headerlink" title="二: 索引分类"></a>二: 索引分类</h4><ul><li><p>单值索引: 一个索引值包含一个列，一个表可以有多个单列索引</p></li><li><p>唯一索引: 索引列的值必须唯一，单允许空值</p></li><li><p>复合索引: 一个索引包含多个列</p></li></ul><h4 id="三-索引创建、删除及查看"><a href="#三-索引创建、删除及查看" class="headerlink" title="三: 索引创建、删除及查看"></a>三: 索引创建、删除及查看</h4><ul><li><p>创建</p><p>  <code>create [unique] index indexName on tableName(colName(length))</code></p><p>  <code>alter table tableName add [unique] index indexName(colName1, ... , colNameN)</code></p></li><li><p>删除</p><p>  <code>Drop index indexName on tableName</code></p></li><li><p>查看</p><p>  <code>show index from taleName</code></p></li></ul><h4 id="四-索引的使用场景"><a href="#四-索引的使用场景" class="headerlink" title="四: 索引的使用场景"></a>四: 索引的使用场景</h4><ul><li><p>使用索引</p><ul><li><p>1: 主键自动建立唯一索引</p></li><li><p>2: 频繁作为查询条件的字段应该建立索引</p></li><li><p>3: 查询中已其他表关联的字段，外键关系建立索引</p></li><li><p>4: 频繁更新的不适合建立索引</p></li><li><p>5: 查询中排序的字段建立索引可提高排序速度</p></li><li><p>6: 查询中统计或者分组字段</p></li></ul></li></ul><ul><li><p>不使用索引</p><ul><li><p>1: 表记录太少</p></li><li><p>2: 经常增删改的字段</p></li><li><p>3: 数据重复且分布平均的表字段（如性别），这种场景下建立索引没有任何效果。</p><ul><li><code>索引的选择性</code> 是指索引列中的不同值的数目与表中记录数的比。如果一个表有 2000 条记录，表索引列有 1980 个不同的值。<code>索引的选择性为 1980 / 2000 = 0.99</code>；索引的选择性越接近1，这个索引的效率越高。</li></ul></li></ul></li></ul><h4 id="五-B-Tree-检索原理"><a href="#五-B-Tree-检索原理" class="headerlink" title="五: B Tree 检索原理"></a>五: <code>B Tree</code> 检索原理</h4><p><img src="/images/blog/201908/6-MySQL-Btree%E6%A3%80%E7%B4%A2%E5%8E%9F%E7%90%86.jpeg" alt="6-MySQL Btree检索原理"></p><p>【<strong>初始化介绍</strong>】</p><p>这是一个 <code>B+树🌲</code> , 绿色的色块是一个个的磁盘块，每个磁盘块包括几个数据项（蓝色色块）和指针（橙色色块）。如磁盘块1包含数据项 17 和 35，包含指针 <code>P1,P2,P3</code>。P1指向小于17的磁盘块，P2指向17和35之间的磁盘块，P3表示大于35的磁盘块。</p><p>真实的数据存在于叶子🍃节点，即是 <code>3, 5, 9, 10, 13, 15, 28, 29, 36, 60, 75, 79, 90, 99</code></p><p>非叶子节点不存储真实的数据，只存储指向搜索方向的数据项</p><p>【<strong>查找过程，以数字29举例</strong>】</p><p>1: 首先把磁盘块1由磁盘加载到内存中，此时发生 <code>第一次IO</code>，在内存中使用二分查找确定29在17和35之间，从而确定使用磁盘块1的P2指针。</p><p>2: 由于P2指向磁盘块3，此时将磁盘块3由磁盘加载至内存中，发生 <code>第二次IO</code>。</p><p>3: 29在26和30之间，从而确定使用磁盘块3的P2指针，通过指针加载磁盘块8到内存中，发生 <code>第三次IO</code>，同时内存中使用二分查找找到29。</p><hr><p><strong>Q1: 为什么数据表记录的删除多使用软删除？</strong></p><ul><li><p>保留数据记录，为了数据分析</p></li><li><p>为了保留原来原来索引，原因删除元素需要重建索引</p></li></ul><!--more-->]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL架构体系及SQL查询执行流程初探</title>
      <link href="/2019/08/17/MySQL%E6%9E%B6%E6%9E%84%E4%BD%93%E7%B3%BB%E5%8F%8ASQL%E6%9F%A5%E8%AF%A2%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%88%9D%E6%8E%A2/"/>
      <url>/2019/08/17/MySQL%E6%9E%B6%E6%9E%84%E4%BD%93%E7%B3%BB%E5%8F%8ASQL%E6%9F%A5%E8%AF%A2%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%88%9D%E6%8E%A2/</url>
      
        <content type="html"><![CDATA[<p>简述: 自工作以来，大部分的时间接触的关系型都是 <code>MySQL</code> 数据库系统，但使用都比较浅显基础(<code>CRUD</code>)。最近打算重新深入学习下 <code>MySQL</code>，安装的版本是 <code>5.7.21</code>，学习记录于此，便日后温习查看。</p><p>首先来看看 <code>MySQL</code> 的架构图，然后依次来看看每一部分是做什么的。</p><a id="more"></a><p><img src="/images/blog/201908/3-MySQL%E4%BD%93%E7%B3%BB%E6%9E%B6%E6%9E%84%E5%9B%BE.jpg" alt></p><h4 id="1：Client"><a href="#1：Client" class="headerlink" title="1：Client"></a>1：Client</h4><p><code>连接器（Connectors）</code>，也就是通常所说的 MySQL 客户端。不同的编程语言提供了对应的 <code>API</code> 与 MySQL 服务系统进行交互通讯。</p><ul><li>通过 <code>show variables like &#39;%connection%;</code> 来查看 MySQl 服务器的连接信息。默认最大连接数是151。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &apos;%connection%&apos;;</span><br><span class="line">+--------------------------+-----------------+</span><br><span class="line">| Variable_name            | Value           |</span><br><span class="line">+--------------------------+-----------------+</span><br><span class="line">| character_set_connection | utf8            |</span><br><span class="line">| collation_connection     | utf8_general_ci |</span><br><span class="line">| max_connections          | 151             |</span><br><span class="line">| max_user_connections     | 0               |</span><br><span class="line">+--------------------------+-----------------+</span><br></pre></td></tr></table></figure><h4 id="2：MySQL-Server"><a href="#2：MySQL-Server" class="headerlink" title="2：MySQL Server"></a>2：MySQL Server</h4><p>Server 层是 MySQL 提供服务的核心。主要分为以下几个模块（查询缓存 <code>MySQL8.0</code> 版本被删除，故此不做记录📝）</p><h5 id="2-1：Connection-Pool（连接池）"><a href="#2-1：Connection-Pool（连接池）" class="headerlink" title="2.1：Connection Pool（连接池）"></a>2.1：Connection Pool（连接池）</h5><p>连接池主要实现以下功能</p><h6 id="2-1-1：Authentication（进行身份验证）"><a href="#2-1-1：Authentication（进行身份验证）" class="headerlink" title="2.1.1：Authentication（进行身份验证）**"></a>2.1.1：Authentication（进行身份验证）**</h6><p><code>terminal</code> 下连接命令如下 <code>mysql -u root -h localhost - p</code>。如果用户名密码认证通过，连接器会到 <code>权限表</code> 里面查出用户拥有的权限。之后，这个连接里面的权限判断逻辑，都将依赖于此时读到的权限。</p><p>一旦一个用户成功建立连接后，即使你用管理员账号对这个用户的权限做了修改，也不会影响已经存在连接的权限。修改完成后，只有再新建的连接才会使用新的权限设置。</p><p>连接完成后如果没有使用，该连接就处于 <code>Sleep</code> 状态。如果超过 MySQL 服务器配置的 <code>wait_time</code> 值，可通过 <code>show variables like &#39;%wait%&#39;;</code> 查看该值，默认是 <code>28800</code> 秒，该连接就会被回收，使用时就需要重新建立连接了。</p><p>如果客户端持续有请求，则一直使用同一个连接，则称该连接为长连接。短连接则是指每次执行完很少的几次查询就断开连接，下次查询再重新建立一个。由于建立连接比较复杂，应当减少连接的操作而使用长连接。但是过多使用长连接会使得内存飙升（因为 MySQL 在执行过程中临时使用的内存是管理在连接对象里面的。这些资源会在连接断开的时候才释放）导致 MySQL 异常重启。</p><p><strong>解决方案1</strong> ：定期断开长连接。使用一段时间后或者程序里面判断执行过一个占用内存的大查询后，定期断开连接，之后要查询时再重新建立连接；</p><p><strong>解决方案2</strong> ：对于 MySQL 5.7 及后续版本，可以在每次执行一个比较大的操作后，通过执行 mysql_reset_connection 来重新初始化连接资源。这个过程不需要重连和重新做权限验证，但是会将连接恢复到刚刚创建完时的状态。</p><h6 id="2-1-2：Thread-Reuse（线程重用）"><a href="#2-1-2：Thread-Reuse（线程重用）" class="headerlink" title="2.1.2：Thread Reuse（线程重用）"></a>2.1.2：Thread Reuse（线程重用）</h6><h6 id="2-1-3：Connection-Limits（连接限制"><a href="#2-1-3：Connection-Limits（连接限制" class="headerlink" title="2.1.3：Connection Limits（连接限制)"></a>2.1.3：Connection Limits（连接限制)</h6><h6 id="2-1-4：Check-Memory-内存检测"><a href="#2-1-4：Check-Memory-内存检测" class="headerlink" title="2.1.4：Check Memory (内存检测)"></a>2.1.4：Check Memory (内存检测)</h6><h6 id="2-1-5：缓存"><a href="#2-1-5：缓存" class="headerlink" title="2.1.5：缓存"></a>2.1.5：缓存</h6><p>每个客户端连接都会在服务器进程中拥有一个线程，这个连接的查询只会在这个单独的线程中执行，该线程只能轮流在某个 <code>cpu</code> 上运行，服务器会负责缓存线程。因此，不需要为每一个新建的连接创建或销毁线程，或者直接使用线程池功能，来维护大量的可用连接。</p><hr><h5 id="2-2：SQL-Interface（SQL-接口）"><a href="#2-2：SQL-Interface（SQL-接口）" class="headerlink" title="2.2：SQL Interface（SQL 接口）"></a>2.2：SQL Interface（SQL 接口）</h5><p>用于执行 <code>DML</code>, <code>DDL</code>, 存储过程, 视图, 触发器等。接收客户端发来的sql请求查询，并返回需要查询的结构。</p><h5 id="2-3：Parser（解析器）"><a href="#2-3：Parser（解析器）" class="headerlink" title="2.3：Parser（解析器）"></a>2.3：Parser（解析器）</h5><p>解析器通过关键字将SQL语句进行解析（<strong>词法分析 + 预发分析</strong>），并生成对应的数据结构（解析树）。然后对其进行各种优化，包括重写查询，决定查询的读写顺序，以及选择须使用的索引等。MySQL解析器将使用MySQL语法规则验证和解析查询。</p><p>预处理器则根据一些MySQL规则进行进一步检查解析书是否合法，例如检查数据表和数据列是否存在，还会解析名字和别名，看看它们是否有歧义。</p><h5 id="2-4：Optimizer（优化器）"><a href="#2-4：Optimizer（优化器）" class="headerlink" title="2.4：Optimizer（优化器）"></a>2.4：Optimizer（优化器）</h5><p>优化器会将 <code>解析树</code> 转化成 <code>执行计划</code>。一条查询可以有多种执行方法，最后都是返回相同结果。优化器的作用就是 <strong>找到这其中最好的执行计划</strong>。生成执行计划的过程会消耗较多的时间，特别是存在许多可选的执行计划时。</p><p>如果在一条SQL语句执行的过程中将该语句对应的最终执行计划进行缓存，当相似的语句再次被输入服务器时，就可以直接使用已缓存的执行计划，从而跳过SQL语句生成执行计划的整个过程，进而可以提高语句的执行速度。</p><p>eg：怎么使用索引，怎么处理表的 Join 优化器处理</p><blockquote><p>例如一个数据表建立的组合索引 idx_table_c1c2c3c4, 当查询条件为 <code>where c3=&#39;c3&#39; and c2=&#39;c2&#39;  and c4=&#39;c4&#39; and c1=&#39;c1&#39;;</code> 时查询优化器会自动调整和优化，此时等价于 <code>where c1=&#39;c1&#39; and c2=&#39;c2&#39;  and c4=&#39;c4&#39; and c3=&#39;c3&#39;;</code>。但是最佳实践是按照索引建立的顺序来使用，以此来减少底层优化器的工作量。</p></blockquote><p>解析器，预处理器，优化器处理流程 <a href="https://zhuanlan.zhihu.com/p/61546435" target="_blank" rel="noopener">如下图</a></p><p><img src="/images/blog/201908/4-MySQL%E8%A7%A3%E6%9E%90%E5%99%A8%E5%92%8C%E4%BC%98%E5%8C%96%E5%99%A8.jpg" alt></p><p><a href="https://zhuanlan.zhihu.com/p/61546435" target="_blank" rel="noopener">图片引用自 程序员历小冰</a></p><h5 id="2-5：Executor（执行器）"><a href="#2-5：Executor（执行器）" class="headerlink" title="2.5：Executor（执行器）"></a>2.5：Executor（执行器）</h5><p>根据 优化器 的执行计划去调用存储引擎 API 接口获取数据</p><h4 id="3：Management-Serveices-amp-Utilities（系统管理和控制工具）"><a href="#3：Management-Serveices-amp-Utilities（系统管理和控制工具）" class="headerlink" title="3：Management Serveices &amp; Utilities（系统管理和控制工具）"></a>3：Management Serveices &amp; Utilities（系统管理和控制工具）</h4><p>备份，安全恢复，复制，集群，管理，配置，迁移和元数据。</p><h4 id="4：Pluggable-Storage-Engines（可插拔的存储引擎）"><a href="#4：Pluggable-Storage-Engines（可插拔的存储引擎）" class="headerlink" title="4：Pluggable Storage Engines（可插拔的存储引擎）"></a>4：Pluggable Storage Engines（可插拔的存储引擎）</h4><ul><li>存储引擎针对数据表</li></ul><h4 id="5：文件系统，文件，日志"><a href="#5：文件系统，文件，日志" class="headerlink" title="5：文件系统，文件，日志"></a>5：文件系统，文件，日志</h4><p><strong>补充: 一条 SQL 查询语句各个关键字解析的顺序过程</strong></p><p><img src="/images/blog/201908/5-SQL%E8%A7%A3%E6%9E%90%E6%B5%81%E7%A8%8B.jpg" alt="SQL 语句解析过程"></p><p>写着写着发现提及很多知识点还是未知，路漫漫其修远兮，需要学的东西还多，愿每日都比昨日进步，即使进步很微小。那先吃饭去了🍚</p><h4 id="todo"><a href="#todo" class="headerlink" title="todo"></a>todo</h4><ul><li>数据库实例了解</li></ul><hr><p><strong>参考</strong></p><p><a href="https://time.geekbang.org/column/article/68319" target="_blank" rel="noopener">MySQL实战45讲</a></p><p><a href="https://zhuanlan.zhihu.com/p/61757521" target="_blank" rel="noopener">一条SQL语句在MySQL中是如何执行的</a></p><p><a href="https://www.jianshu.com/p/bb6bdedbf9ce" target="_blank" rel="noopener">本来以为mysql即将消亡，没想到它却越来越强大</a></p><p><a href="https://www.jianshu.com/p/7d1552883289" target="_blank" rel="noopener">MySQL体系架构</a></p><p><a href="https://www.jianshu.com/p/1a3a932ccf88" target="_blank" rel="noopener">mysql体系架构图以及二进制安装mariadb</a></p><p><a href="https://blog.csdn.net/u010342038/article/details/52798320" target="_blank" rel="noopener">MySQL中的实例、数据库关系简介</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 5.7.21-1配置文件my.cnf</title>
      <link href="/2019/08/15/MySQL-5-7-21-1%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6my-cnf/"/>
      <url>/2019/08/15/MySQL-5-7-21-1%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6my-cnf/</url>
      
        <content type="html"><![CDATA[<p>简述：<code>MySQL 5.7.21-1</code> 原始配置文件 <code>my.cnf</code>，为以后查询方便特此记录</p><p>MySQL 安装后的一些注意点</p><p>1：安装后先设置字符编码。如果一个库（<code>eg:DB1</code>）在使用期间改变了 <code>my.cnf</code> 的字符编码配置，此时 DB1 的原有的字符串编码不受影响，如果再新建一个 <code>DB</code>2 库，则 <code>DB2</code> 使用心得字符编码。</p> <a id="more"></a><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The MySQL database server configuration file.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You can copy this to one of:</span></span><br><span class="line"><span class="comment"># - "/etc/mysql/my.cnf" to set global options,</span></span><br><span class="line"><span class="comment"># - "~/.my.cnf" to set user-specific options.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># One can use all long options that the program supports.</span></span><br><span class="line"><span class="comment"># Run program with --help to get a list of available options and with</span></span><br><span class="line"><span class="comment"># --print-defaults to see which it would actually understand and use.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For explanations see</span></span><br><span class="line"><span class="comment"># http://dev.mysql.com/doc/mysql/en/server-system-variables.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This will be passed to all mysql clients</span></span><br><span class="line"><span class="comment"># It has been reported that passwords should be enclosed with ticks/quotes</span></span><br><span class="line"><span class="comment"># escpecially if they contain "#" chars...</span></span><br><span class="line"><span class="comment"># Remember to edit /etc/mysql/debian.cnf when changing the socket location.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Here is entries for some specific programs</span></span><br><span class="line"><span class="comment"># The following values assume you have at least 32M ram</span></span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line">socket= /var/run/mysqld/mysqld.sock</span><br><span class="line">nice= 0</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># * Basic Settings</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">user= mysql</span><br><span class="line">pid-file= /var/run/mysqld/mysqld.pid</span><br><span class="line">socket= /var/run/mysqld/mysqld.sock</span><br><span class="line">port= 3306</span><br><span class="line">basedir= /usr</span><br><span class="line">datadir= /var/lib/mysql</span><br><span class="line">tmpdir= /tmp</span><br><span class="line">lc-messages-dir= /usr/share/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># set server character</span></span><br><span class="line">character-<span class="keyword">set</span>-<span class="keyword">server</span> = utf8</span><br><span class="line"><span class="keyword">collation</span>-<span class="keyword">server</span>     = utf8_general_ci</span><br><span class="line">init_connect         = <span class="string">'SET NAMES utf8'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">skip</span>-<span class="keyword">external</span>-locking</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Instead of skip-networking the default is now to listen only on</span></span><br><span class="line"><span class="comment"># localhost which is more compatible and is not less secure.</span></span><br><span class="line">bind-address= <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># * Fine Tuning</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">key_buffer_size= <span class="number">16</span>M</span><br><span class="line">max_allowed_packet= <span class="number">16</span>M</span><br><span class="line">thread_stack= <span class="number">192</span>K</span><br><span class="line">thread_cache_size       = <span class="number">8</span></span><br><span class="line"><span class="comment"># This replaces the startup script and checks MyISAM tables if needed</span></span><br><span class="line"><span class="comment"># the first time they are touched</span></span><br><span class="line">myisam-<span class="keyword">recover</span>-options  = <span class="keyword">BACKUP</span></span><br><span class="line"><span class="comment">#max_connections        = 100</span></span><br><span class="line"><span class="comment">#table_open_cache       = 64</span></span><br><span class="line"><span class="comment">#thread_concurrency     = 10</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># * Query Cache Configuration</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">query_cache_limit= <span class="number">1</span>M</span><br><span class="line">query_cache_size        = <span class="number">16</span>M</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># * Logging and Replication</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Both location gets rotated by the cronjob.</span></span><br><span class="line"><span class="comment"># Be aware that this log type is a performance killer.</span></span><br><span class="line"><span class="comment"># As of 5.1 you can enable the log at runtime!</span></span><br><span class="line"><span class="comment">#general_log_file        = /var/log/mysql/mysql.log</span></span><br><span class="line"><span class="comment">#general_log             = 1</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Error log - should be very few entries.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">log_error = /<span class="keyword">var</span>/<span class="keyword">log</span>/mysql/error.log</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Here you can see queries with especially long duration</span></span><br><span class="line"><span class="comment">#slow_query_log= 1</span></span><br><span class="line"><span class="comment">#slow_query_log_file= /var/log/mysql/mysql-slow.log</span></span><br><span class="line"><span class="comment">#long_query_time = 2</span></span><br><span class="line"><span class="comment">#log-queries-not-using-indexes</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The following can be used as easy to replay backup logs or for replication.</span></span><br><span class="line"><span class="comment"># <span class="doctag">note:</span> if you are setting up a replication slave, see README.Debian about</span></span><br><span class="line"><span class="comment">#       other settings you may need to change.</span></span><br><span class="line"><span class="comment">#server-id= 1</span></span><br><span class="line"><span class="comment">#log_bin= /var/log/mysql/mysql-bin.log</span></span><br><span class="line">expire_logs_days= <span class="number">10</span></span><br><span class="line">max_binlog_size   = <span class="number">100</span>M</span><br><span class="line"><span class="comment">#binlog_do_db= include_database_name</span></span><br><span class="line"><span class="comment">#binlog_ignore_db= include_database_name</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># * InnoDB</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.</span></span><br><span class="line"><span class="comment"># Read the manual for more InnoDB related options. There are many!</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># * Security Features</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Read the manual, too, if you want chroot!</span></span><br><span class="line"><span class="comment"># 数据文件的存放路径【每一个数据库是目录】</span></span><br><span class="line"><span class="comment"># chroot = /var/lib/mysql/</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For generating SSL certificates I recommend the OpenSSL GUI "tinyca".</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># ssl-ca=/etc/mysql/cacert.pem</span></span><br><span class="line"><span class="comment"># ssl-cert=/etc/mysql/server-cert.pem</span></span><br><span class="line"><span class="comment"># ssl-key=/etc/mysql/server-key.pem</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang爬虫系列三：下载去哪儿游记图片到本地</title>
      <link href="/2019/08/14/Golang%E4%B8%8B%E8%BD%BD%E5%8E%BB%E5%93%AA%E5%84%BF%E6%B8%B8%E8%AE%B0%E5%9B%BE%E7%89%87%E5%88%B0%E6%9C%AC%E5%9C%B0/"/>
      <url>/2019/08/14/Golang%E4%B8%8B%E8%BD%BD%E5%8E%BB%E5%93%AA%E5%84%BF%E6%B8%B8%E8%AE%B0%E5%9B%BE%E7%89%87%E5%88%B0%E6%9C%AC%E5%9C%B0/</url>
      
        <content type="html"><![CDATA[<h6 id="声明：以下内容仅供技术学习"><a href="#声明：以下内容仅供技术学习" class="headerlink" title="声明：以下内容仅供技术学习"></a>声明：以下内容仅供技术学习</h6><p>简述： 获取<a href="http://www.qunar.com/" target="_blank" rel="noopener">去哪儿网</a> 中的的游记（eg: <a href="https://travel.qunar.com/youji/6961284" target="_blank" rel="noopener">美在“十二背后”</a> ）页面中的图片地址并将图片保存到本地</p><a id="more"></a><h5 id="步骤如下"><a href="#步骤如下" class="headerlink" title="步骤如下"></a>步骤如下</h5><p>1: 使用正则获取图片的链接并存储到一个 <code>slice</code> 中</p><p>2: 遍历 <code>slice</code> 中的 图片地址，读取数据保存到本地</p><p><strong>代码如下</strong></p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"strconv"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"io"</span></span><br><span class="line">    <span class="string">"regexp"</span></span><br><span class="line">    <span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> articleId <span class="keyword">int</span></span><br><span class="line">    fmt.Print(<span class="string">"请输入游记id: "</span>)</span><br><span class="line">    fmt.Scan(&amp;articleId)</span><br><span class="line"></span><br><span class="line">    spiderArticleImageUrls(articleId)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">spiderArticleImageUrls</span><span class="params">(articleId <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    <span class="comment">//https://travel.qunar.com/youji/5908435</span></span><br><span class="line">    articleUrl := <span class="string">"https://travel.qunar.com/youji/"</span> + strconv.Itoa(articleId)</span><br><span class="line">    resp, err1 := http.Get(articleUrl)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//fmt.Println(resp.StatusCode)</span></span><br><span class="line">    <span class="comment">//os.Exit(1)</span></span><br><span class="line">    <span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"http get err:"</span>, <span class="literal">nil</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> resp.StatusCode != <span class="number">200</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"404 not found"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> pageContent <span class="keyword">string</span></span><br><span class="line">    buffer := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">8192</span>)</span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        n, err2 := resp.Body.Read(buffer)</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">            fmt.Println(<span class="string">"读取网页完成"</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> err2 != <span class="literal">nil</span> &amp;&amp; err2 != io.EOF &#123;</span><br><span class="line">            fmt.Println(<span class="string">"err2:"</span>, err2)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        pageContent += <span class="keyword">string</span>(buffer[:n])</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    osDir, _ := os.Getwd()</span><br><span class="line">    dir := osDir + <span class="string">"/qunar/"</span></span><br><span class="line">    os.Mkdir(dir, os.ModePerm)</span><br><span class="line">    fileName := dir + strconv.Itoa(articleId) + <span class="string">".txt"</span></span><br><span class="line"></span><br><span class="line">    file, err3 := os.Create(fileName)</span><br><span class="line">    <span class="keyword">if</span> err3 != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"文件创建失败: "</span>, err3)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 写入内容到文件*/</span></span><br><span class="line">    image_pat := regexp.MustCompile(<span class="string">`data-retina="(.*?)" class="box_img js_box_img js_lazyimg ajaxloading"`</span>)</span><br><span class="line">    image_urls := image_pat.FindAllStringSubmatch(pageContent, <span class="number">-1</span>)</span><br><span class="line">    <span class="comment">//var saveImages []string</span></span><br><span class="line">    imgDir := osDir + <span class="string">"/qunar/"</span> + strconv.Itoa(articleId) + <span class="string">"/"</span></span><br><span class="line">    os.Mkdir(imgDir, os.ModePerm)</span><br><span class="line">    fileSaveChan := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line">    <span class="keyword">for</span> key, image := <span class="keyword">range</span> image_urls &#123;</span><br><span class="line">        key++</span><br><span class="line">        <span class="keyword">go</span> saveImageUrlToFile(key, image[<span class="number">1</span>], imgDir, fileSaveChan)</span><br><span class="line">        file.WriteString(<span class="keyword">string</span>(key) + <span class="string">"--"</span> + image[<span class="number">1</span>] + <span class="string">"\n"</span>)</span><br><span class="line">        <span class="comment">//saveImages = append(saveImages, image[1])</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    imgCount := (<span class="built_in">len</span>(image_urls))</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; imgCount; i++ &#123;</span><br><span class="line">        fmt.Printf(<span class="string">"图片%d.jpg 保存成功\n"</span>, &lt;-fileSaveChan)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存文件件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">saveImageUrlToFile</span><span class="params">(i <span class="keyword">int</span>, imgUrl, dir <span class="keyword">string</span>, fileSaveChan <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    fileName := dir + strconv.Itoa(i) + <span class="string">".jpg"</span></span><br><span class="line">    file, _ := os.Create(fileName)</span><br><span class="line">    resp, err1 := http.Get(imgUrl)</span><br><span class="line">    <span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"saveImageUrlToFile err:"</span>, err1)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line">    buffer := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">8192</span>)</span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        n, err2 := resp.Body.Read(buffer)</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">            <span class="comment">//fmt.Println("saveImageUrlToFile 读取网页完成:", i)</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> err2 != <span class="literal">nil</span> &amp;&amp; err2 != io.EOF &#123;</span><br><span class="line">            fmt.Println(<span class="string">"err2:"</span>, err2)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数据写入文件</span></span><br><span class="line">        file.Write(buffer[:n])</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fileSaveChan &lt;- i</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang爬虫系列二：爬取捧腹网段子及其笑话详情</title>
      <link href="/2019/08/12/golang%E7%88%AC%E5%8F%96%E5%86%85%E6%B6%B5%E6%AE%B5%E5%AD%90%E7%AC%91%E8%AF%9D%E5%8F%8A%E4%BA%8C%E7%BA%A7%E9%A1%B5%E9%9D%A2/"/>
      <url>/2019/08/12/golang%E7%88%AC%E5%8F%96%E5%86%85%E6%B6%B5%E6%AE%B5%E5%AD%90%E7%AC%91%E8%AF%9D%E5%8F%8A%E4%BA%8C%E7%BA%A7%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h6 id="声明：以下内容仅供技术学习"><a href="#声明：以下内容仅供技术学习" class="headerlink" title="声明：以下内容仅供技术学习"></a>声明：以下内容仅供技术学习</h6><p>简述：爬取 <a href="https://www.pengfu.com" target="_blank" rel="noopener">捧腹网 </a> 中的 <a href="https://www.pengfu.com/xiaohua_1.html" target="_blank" rel="noopener">段子</a>页面数据及每一条数据所链接的 <a href="https://www.pengfu.com/content_1857807_1.html" target="_blank" rel="noopener">笑话详情页</a>。</p><a id="more"></a><h5 id="步骤如下"><a href="#步骤如下" class="headerlink" title="步骤如下"></a>步骤如下</h5><p>以第一页（<a href="https://www.pengfu.com/xiaohua_1.html）" target="_blank" rel="noopener">https://www.pengfu.com/xiaohua_1.html）</a> 举例</p><p>1: 爬取第一页的内容，获取里面每一个笑话的链接;</p><p>2: 爬取步骤1获取到的笑话链接的内容，解析笑话标题和内容</p><p>3: 将每一页爬取到的标题和内容写入到文件中</p><p><code>代买示例如下</code></p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"strconv"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"io"</span></span><br><span class="line">    <span class="string">"regexp"</span></span><br><span class="line">    <span class="string">"strings"</span></span><br><span class="line">    <span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> start <span class="keyword">int</span></span><br><span class="line">    <span class="keyword">var</span> end <span class="keyword">int</span></span><br><span class="line">    fmt.Print(<span class="string">"请输入爬取的起始页: "</span>)</span><br><span class="line">    fmt.Scan(&amp;start)</span><br><span class="line">    fmt.Print(<span class="string">"请输入爬取的结束页: "</span>)</span><br><span class="line">    fmt.Scan(&amp;end)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//爬取业务逻辑</span></span><br><span class="line">    pengfuWorking(start, end)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">pengfuWorking</span><span class="params">(start, end <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    fmt.Println(start, <span class="string">":"</span>, end)</span><br><span class="line"></span><br><span class="line">    pageChan := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line">    <span class="keyword">for</span> i := start; i &lt;= end; i++ &#123;</span><br><span class="line">        <span class="comment">//开启协程</span></span><br><span class="line">        <span class="keyword">go</span> pengfuSpider(i, pageChan)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i := start; i &lt;= end; i++ &#123;</span><br><span class="line">        <span class="comment">//读取管道标识</span></span><br><span class="line">        fmt.Printf(<span class="string">"第 %d 页 爬取完成\n"</span>, &lt;-pageChan)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抓取带有10个段子的url</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">pengfuSpider</span><span class="params">(i <span class="keyword">int</span>, pageChan <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    <span class="comment">//https://www.pengfu.com/xiaohua_1.html</span></span><br><span class="line">    url := <span class="string">"https://www.pengfu.com/xiaohua_"</span> + strconv.Itoa(i) + <span class="string">".html"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//抓取url中的内容</span></span><br><span class="line">    result, err := spiderUrlContent(url)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"err message："</span>, err)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//爬取每一页的段子</span></span><br><span class="line">    urlPat := regexp.MustCompile(<span class="string">`&lt;h1 class="dp-b"&gt;&lt;a href="(?s:(.*?))"`</span>)</span><br><span class="line">    urls := urlPat.FindAllStringSubmatch(result, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建存储title,content 的切片</span></span><br><span class="line">    titleSlice := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">0</span>)</span><br><span class="line">    contentSlice := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> _, value := <span class="keyword">range</span> urls &#123;</span><br><span class="line">        url := value[<span class="number">1</span>]</span><br><span class="line">        title, content, err := spiderDetailContent(url)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Println(<span class="string">"spiderDetailContent error:"</span>, err)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        titleSlice = <span class="built_in">append</span>(titleSlice, title)</span><br><span class="line">        contentSlice = <span class="built_in">append</span>(contentSlice, content)</span><br><span class="line">    &#125;</span><br><span class="line">    saveJokeToFile(i, titleSlice, contentSlice)</span><br><span class="line">    pageChan &lt;- i</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">spiderUrlContent</span><span class="params">(url <span class="keyword">string</span>)</span> <span class="params">(result <span class="keyword">string</span>, err error)</span></span> &#123;</span><br><span class="line">    resp, err1 := http.Get(url)</span><br><span class="line">    <span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line">        err = err1</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line">    buffer := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">8196</span>)</span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        n, err2 := resp.Body.Read(buffer)</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">            fmt.Println(<span class="string">"读取网页完成:"</span>, url)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> err2 != <span class="literal">nil</span> &amp;&amp; err2 != io.EOF &#123;</span><br><span class="line">            err = err2</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        result += <span class="keyword">string</span>(buffer[:n])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//爬取一个笑话详情页的标题和内容</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">spiderDetailContent</span><span class="params">(url <span class="keyword">string</span>)</span> <span class="params">(title, content <span class="keyword">string</span>, err error)</span></span> &#123;</span><br><span class="line">    result, err1 := spiderUrlContent(url)</span><br><span class="line">    <span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line">        err = err1</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//匹配标题</span></span><br><span class="line">    titlePat := regexp.MustCompile(<span class="string">`&lt;h1&gt;(?s:(.*?))\t*&lt;/h1&gt;`</span>)</span><br><span class="line">    titles := titlePat.FindAllStringSubmatch(result, <span class="number">1</span>)</span><br><span class="line">    title = titles[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">    title = strings.Trim(title, <span class="string">""</span>)</span><br><span class="line">    title = strings.Replace(title, <span class="string">"&amp;nbsp; "</span>, <span class="string">""</span>, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//匹配内容</span></span><br><span class="line">    contentPat := regexp.MustCompile(<span class="string">`&lt;div class="content-txt pt10"&gt;\n*\t*(?s:(.*?))&lt;a`</span>)</span><br><span class="line">    contents := contentPat.FindAllStringSubmatch(result, <span class="number">1</span>)</span><br><span class="line">    content = contents[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">    content = strings.Trim(content, <span class="string">"\t"</span>)</span><br><span class="line">    content = strings.Replace(content, <span class="string">"\t"</span>, <span class="string">""</span>, <span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">saveJokeToFile</span><span class="params">(idx <span class="keyword">int</span>, titleSlice, contentSlice []<span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">    <span class="comment">//将读取到的数据存储存储为文件</span></span><br><span class="line">    dir, _ := os.Getwd()</span><br><span class="line">    filePath := dir + <span class="string">"/pengfu_"</span> + strconv.Itoa(idx) + <span class="string">".txt"</span></span><br><span class="line"></span><br><span class="line">    file, err := os.Create(filePath)</span><br><span class="line">    <span class="keyword">if</span> err != err &#123;</span><br><span class="line">        fmt.Println(<span class="string">"os Create err："</span>, err.Error())</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">defer</span> file.Close() <span class="comment">//保存好一个文件就关闭一个文件</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(titleSlice); i++ &#123;</span><br><span class="line">        file.WriteString(titleSlice[i] + <span class="string">":\t\t"</span> + contentSlice[i] + <span class="string">"\n"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>爬取到的文本文件示例</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">会放坏:女：“我购物车里的那些水果牛奶饮料零食你赶紧给我买！” 男：“着什么急呀？” 女：“天越来越热了，会放坏的。”</span><br><span class="line">肉多舒服:楼主大四女生，这几天和同一宿舍的女生一起去找工作，在火车站，碰到一个大姐，带着一个四五岁的小男孩侯车，小男孩总是粘着我，要坐我腿上，同宿舍的女生很是羡慕我有人缘，我得意的问小男孩：“你为什么老是喜欢坐姐姐腿上？” 小男孩用稚嫩的口气回答：“姐姐腿上肉多，坐着舒服” 我：“尼玛，这是谁家小哔崽子，快点领走！”</span><br><span class="line">卸妆:一女人问大师：大师，在这么复杂险恶的世界，我一个弱女子如何保护自己？大师说：你把妆卸了！</span><br><span class="line">刺十字绣:家长对孩子的教育真的非常重要。有些男孩，小时候调皮的很，偷了邻居家一根针，家长也不管，一根针嘛，没事。结果孩子长大了，不好好学习每天呆在家里刺十字绣。</span><br><span class="line">约会:网上聊了一妹子，今天见面。问老妈要了二百块钱，老妈问我干嘛用，我说约会，她高高兴兴的就给了。刚出家门，老爸就把我拽到一边说“小子，二百块钱给我一百，半个月不知道烟的滋味了。”我说“爸，这是我和女朋友的约会钱，不能给你。”老爸说了。“你约什么会，那是我刚建的小号，为了抽颗烟我和你聊了半个月了，快拿来。‘’</span><br><span class="line">改配方了:70年代时，有一长辈练铁沙掌，功夫成了之后，可以掌断五砖，凌空碎砖，威风的不得了。 到80年代，只能掌断三砖。 到90年代只能一砖一砖的断了。 他说，一直以为功力退步了，后来才知道烧砖的配方改了。。。</span><br><span class="line">报恩:为什么古装剧里总是有女人会对恩人说：小女子无以为报，唯有以身相许，古代真的存在这种现象吗？ 扯淡，那是因为她喜欢他，要是不喜欢，她就会说：小女子无以为报，唯有来生再报了。</span><br><span class="line">问路:春节回老家时，看到一个老外在向一个农民伯伯问路。只见那个老外一边说着生硬的中文，一边用手笔划，但那个农民伯伯却还是不明白。最后，那个农民伯伯说了一句让我至今难忘的话：“Can you speak English?”</span><br><span class="line">老王:闺蜜是个韩剧迷，她老公是个球迷。某天晚上有球赛，他俩因为抢电视机遥控器打了起来。她一气之下找我哭诉，我问她：“电视遥控器最后归谁了?”她边哭边说：“老王。”我疑惑道：“这个老王是谁呀?我怎么没听说过。”她哭的声音更大了：“一个修电视机的……”</span><br><span class="line">丑的先说:两个女人在大街上吵架，那个骂的吐沫横飞啊。一大妈看不下去了，可谁也不听，都说自己对，对方错。大妈淡淡地来了一句：“那么这样，丑的先说!”瞬间，整个世界都安静了。。。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang爬虫系列一：爬取豆瓣电影top250数据信息</title>
      <link href="/2019/08/10/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1top250%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96/"/>
      <url>/2019/08/10/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1top250%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<h6 id="声明：以下内容仅供技术学习"><a href="#声明：以下内容仅供技术学习" class="headerlink" title="声明：以下内容仅供技术学习"></a>声明：以下内容仅供技术学习</h6><p>简述：爬取豆瓣电影 <code>top 250</code> 的基础信息，包括电影🎬名，评分，评价人数，电影链接。</p><a id="more"></a><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">     <span class="string">"fmt"</span></span><br><span class="line">     <span class="string">"strconv"</span></span><br><span class="line">     <span class="string">"net/http"</span></span><br><span class="line">     <span class="string">"io"</span></span><br><span class="line">     <span class="string">"regexp"</span></span><br><span class="line">     <span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">     <span class="keyword">var</span> start <span class="keyword">int</span> <span class="comment">//起始页</span></span><br><span class="line">     <span class="keyword">var</span> end <span class="keyword">int</span>    <span class="comment">//结束页</span></span><br><span class="line">     fmt.Print(<span class="string">"请输入爬取的起始页:"</span>)</span><br><span class="line">     fmt.Scanln(&amp;start)</span><br><span class="line">     fmt.Print(<span class="string">"请输入爬取的结束页:"</span>)</span><br><span class="line">     fmt.Scanln(&amp;end)</span><br><span class="line">     toWorking(start, end)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">toWorking</span><span class="params">(start, end <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">     fmt.Printf(<span class="string">"起始结束页是%d : %d\n"</span>, start, end)</span><br><span class="line"></span><br><span class="line">     pageChan := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line">     <span class="keyword">for</span> i := start; i &lt;= end; i++ &#123;</span><br><span class="line">          <span class="keyword">go</span> SpiderDoubanPage(i, pageChan)</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">for</span> i := start; i &lt;= end; i++ &#123;</span><br><span class="line">          <span class="comment">//开启协程</span></span><br><span class="line">          fmt.Printf(<span class="string">"第 %d 页 爬取完成\n"</span>, &lt;-pageChan)</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SpiderDoubanPage</span><span class="params">(i <span class="keyword">int</span>, pageChan <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">     <span class="comment">//https://movie.douban.com/top250?start=0&amp;filter=</span></span><br><span class="line">     <span class="comment">//https://movie.douban.com/top250?start=25&amp;filter=</span></span><br><span class="line">     <span class="comment">//https://movie.douban.com/top250?start=50&amp;filter=</span></span><br><span class="line">     url := <span class="string">"https://movie.douban.com/top250?start="</span> + strconv.Itoa((i<span class="number">-1</span>)*<span class="number">25</span>)</span><br><span class="line"></span><br><span class="line">     <span class="comment">//爬取url页面内容【横向爬取】</span></span><br><span class="line">     result, err := httpGetDoubanUrlContent(url)</span><br><span class="line">     <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">          fmt.Println(<span class="string">"err message："</span>, err)</span><br><span class="line">          <span class="keyword">return</span></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">//fmt.Println(result)</span></span><br><span class="line">     <span class="comment">//使用正则表达式解析内容---电影名称</span></span><br><span class="line">     film_pat := regexp.MustCompile(<span class="string">`width="100" alt="(.*?)"`</span>)</span><br><span class="line">     FilmNames := film_pat.FindAllStringSubmatch(result, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">     <span class="comment">//使用正则表达式解析内容---电影分数</span></span><br><span class="line">     score_pat := regexp.MustCompile(<span class="string">`v:average"&gt;(?s:(.*?))&lt;`</span>)</span><br><span class="line">     filmScores := score_pat.FindAllStringSubmatch(result, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">     <span class="comment">//使用正则表达式解析内容---评价人数</span></span><br><span class="line">     people_pat := regexp.MustCompile(<span class="string">`&lt;span&gt;(?s:(\d*?))人评价&lt;/span&gt;`</span>)</span><br><span class="line">     peopleNum := people_pat.FindAllStringSubmatch(result, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">     <span class="comment">//使用正则表达式解析内容---电影详情页url</span></span><br><span class="line">     film_url_pat := regexp.MustCompile(<span class="string">`&lt;a href="(.*?)" class=""&gt;`</span>)</span><br><span class="line">     filmUrls := film_url_pat.FindAllStringSubmatch(result, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">     <span class="comment">//使用正则表达式解析内容---电影序号</span></span><br><span class="line">     film_order_pat := regexp.MustCompile(<span class="string">`&lt;em class=""&gt;(\d*)&lt;/em&gt;`</span>)</span><br><span class="line">     filmOrders := film_order_pat.FindAllStringSubmatch(result, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">     saveToFile(i, filmOrders, FilmNames, filmScores, peopleNum, filmUrls)</span><br><span class="line"></span><br><span class="line">     pageChan &lt;- i</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">httpGetDoubanUrlContent</span><span class="params">(url <span class="keyword">string</span>)</span> <span class="params">(result <span class="keyword">string</span>, err error)</span></span> &#123;</span><br><span class="line">     resp, err1 := http.Get(url)</span><br><span class="line">     <span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line">          err = err1</span><br><span class="line">          <span class="keyword">return</span></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line">     buffer := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">8192</span>)</span><br><span class="line">     <span class="keyword">for</span> &#123;</span><br><span class="line">          n, err2 := resp.Body.Read(buffer)</span><br><span class="line">          <span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">                fmt.Println(<span class="string">"读取网页完成"</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> err2 != <span class="literal">nil</span> &amp;&amp; err2 != io.EOF &#123;</span><br><span class="line">                err = err2</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">          &#125;</span><br><span class="line">          result += <span class="keyword">string</span>(buffer[:n])</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">saveToFile</span><span class="params">(idx <span class="keyword">int</span>, filmOrders, filmNames, filmScores, peopleNum, filmUrls [][]<span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">     <span class="comment">//将读取到的数据存储存储为文件</span></span><br><span class="line">     dir, _ := os.Getwd()</span><br><span class="line">     filePath := dir + <span class="string">"douban_top_"</span> + strconv.Itoa(idx) + <span class="string">".txt"</span></span><br><span class="line"></span><br><span class="line">     file, err := os.Create(filePath)</span><br><span class="line">     <span class="keyword">if</span> err != err &#123;</span><br><span class="line">          fmt.Println(<span class="string">"os Create err："</span>, err.Error())</span><br><span class="line">          <span class="keyword">return</span></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">defer</span> file.Close() <span class="comment">//保存好一个文件就关闭一个文件</span></span><br><span class="line"></span><br><span class="line">     file.WriteString(</span><br><span class="line">          <span class="string">"序号"</span> +</span><br><span class="line">                <span class="string">"\t"</span> + <span class="string">"电影名称"</span> +</span><br><span class="line">                <span class="string">"\t"</span> + <span class="string">"电影评分"</span> +</span><br><span class="line">                <span class="string">"\t"</span> + <span class="string">"评价人数"</span> +</span><br><span class="line">                <span class="string">"\t"</span> + <span class="string">"链接地址"</span> +</span><br><span class="line">                <span class="string">"\n"</span>)</span><br><span class="line">     <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(filmNames); i++ &#123;</span><br><span class="line">          file.WriteString(</span><br><span class="line">                filmOrders[i][<span class="number">1</span>] +</span><br><span class="line">                     <span class="string">"\t"</span> + filmNames[i][<span class="number">1</span>] +</span><br><span class="line">                     <span class="string">"\t"</span> + filmScores[i][<span class="number">1</span>] +</span><br><span class="line">                     <span class="string">"\t"</span> + peopleNum[i][<span class="number">1</span>] +</span><br><span class="line">                     <span class="string">"\t"</span> + filmUrls[i][<span class="number">1</span>] +</span><br><span class="line">                     <span class="string">"\n"</span>)</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="使用-linux-命令合并爬取的文件"><a href="#使用-linux-命令合并爬取的文件" class="headerlink" title="使用 linux 命令合并爬取的文件"></a>使用 <code>linux</code> 命令合并爬取的文件</h5><ul><li><p><code>cat crawlerdouban_top_*.txt&gt;top250.txt</code> //文件合并</p></li><li><p><code>cat top250.txt |grep -v &#39;序号&#39;&gt;douban_top250_movie_list.txt</code> //去取指定内容</p></li><li><p><code>sort -k 1 -n douban_top250_movie_list.txt&gt;douban_top250_movie_list_ordered.txt</code> //排序</p></li><li><p>看心情在文件头部加上 <code>序号     电影名称     电影评分     评价人数     链接地址</code></p></li><li><p>结果如下</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br></pre></td><td class="code"><pre><span class="line">序号     电影名称     电影评分     评价人数     链接地址</span><br><span class="line">1    肖申克的救赎    9.7    1535695    https://movie.douban.com/subject/1292052/</span><br><span class="line">2    霸王别姬    9.6    1136522    https://movie.douban.com/subject/1291546/</span><br><span class="line">3    这个杀手不太冷    9.4    1388824    https://movie.douban.com/subject/1295644/</span><br><span class="line">4    阿甘正传    9.4    1199279    https://movie.douban.com/subject/1292720/</span><br><span class="line">5    美丽人生    9.5    702825    https://movie.douban.com/subject/1292063/</span><br><span class="line">6    千与千寻    9.3    1231099    https://movie.douban.com/subject/1291561/</span><br><span class="line">7    泰坦尼克号    9.4    1140842    https://movie.douban.com/subject/1292722/</span><br><span class="line">8    辛德勒的名单    9.5    623915    https://movie.douban.com/subject/1295124/</span><br><span class="line">9    盗梦空间    9.3    1189561    https://movie.douban.com/subject/3541415/</span><br><span class="line">10    忠犬八公的故事    9.3    795328    https://movie.douban.com/subject/3011091/</span><br><span class="line">11    机器人总动员    9.3    788458    https://movie.douban.com/subject/2131459/</span><br><span class="line">12    三傻大闹宝莱坞    9.2    1075170    https://movie.douban.com/subject/3793023/</span><br><span class="line">13    放牛班的春天    9.3    748223    https://movie.douban.com/subject/1291549/</span><br><span class="line">14    海上钢琴师    9.2    872907    https://movie.douban.com/subject/1292001/</span><br><span class="line">15    楚门的世界    9.2    832134    https://movie.douban.com/subject/1292064/</span><br><span class="line">16    大话西游之大圣娶亲    9.2    835440    https://movie.douban.com/subject/1292213/</span><br><span class="line">17    星际穿越    9.3    854952    https://movie.douban.com/subject/1889243/</span><br><span class="line">18    龙猫    9.2    739493    https://movie.douban.com/subject/1291560/</span><br><span class="line">19    熔炉    9.3    492270    https://movie.douban.com/subject/5912992/</span><br><span class="line">20    教父    9.3    536821    https://movie.douban.com/subject/1291841/</span><br><span class="line">21    无间道    9.2    686756    https://movie.douban.com/subject/1307914/</span><br><span class="line">22    疯狂动物城    9.2    961506    https://movie.douban.com/subject/25662329/</span><br><span class="line">23    当幸福来敲门    9.1    870538    https://movie.douban.com/subject/1849031/</span><br><span class="line">24    怦然心动    9.0    971877    https://movie.douban.com/subject/3319755/</span><br><span class="line">25    触不可及    9.2    569502    https://movie.douban.com/subject/6786002/</span><br><span class="line">26    蝙蝠侠：黑暗骑士    9.1    561534    https://movie.douban.com/subject/1851857/</span><br><span class="line">27    乱世佳人    9.3    394279    https://movie.douban.com/subject/1300267/</span><br><span class="line">28    活着    9.2    444310    https://movie.douban.com/subject/1292365/</span><br><span class="line">29    控方证人    9.6    199996    https://movie.douban.com/subject/1296141/</span><br><span class="line">30    少年派的奇幻漂流    9.0    854147    https://movie.douban.com/subject/1929463/</span><br><span class="line">31    指环王3：王者无敌    9.2    432241    https://movie.douban.com/subject/1291552/</span><br><span class="line">32    摔跤吧！爸爸    9.0    848439    https://movie.douban.com/subject/26387939/</span><br><span class="line">33    天空之城    9.1    507243    https://movie.douban.com/subject/1291583/</span><br><span class="line">34    鬼子来了    9.2    361061    https://movie.douban.com/subject/1291858/</span><br><span class="line">35    十二怒汉    9.4    257052    https://movie.douban.com/subject/1293182/</span><br><span class="line">36    天堂电影院    9.2    416891    https://movie.douban.com/subject/1291828/</span><br><span class="line">37    飞屋环游记    9.0    773645    https://movie.douban.com/subject/2129039/</span><br><span class="line">38    大话西游之月光宝盒    9.0    675104    https://movie.douban.com/subject/1299398/</span><br><span class="line">39    哈尔的移动城堡    9.0    570115    https://movie.douban.com/subject/1308807/</span><br><span class="line">40    搏击俱乐部    9.0    543030    https://movie.douban.com/subject/1292000/</span><br><span class="line">41    罗马假日    9.0    576438    https://movie.douban.com/subject/1293839/</span><br><span class="line">42    末代皇帝    9.2    354693    https://movie.douban.com/subject/1293172/</span><br><span class="line">43    寻梦环游记    9.0    811262    https://movie.douban.com/subject/20495023/</span><br><span class="line">44    闻香识女人    9.0    493633    https://movie.douban.com/subject/1298624/</span><br><span class="line">45    辩护人    9.2    340911    https://movie.douban.com/subject/21937445/</span><br><span class="line">46    素媛    9.2    322715    https://movie.douban.com/subject/21937452/</span><br><span class="line">47    窃听风暴    9.1    340301    https://movie.douban.com/subject/1900841/</span><br><span class="line">48    死亡诗社    9.0    414748    https://movie.douban.com/subject/1291548/</span><br><span class="line">49    两杆大烟枪    9.1    369786    https://movie.douban.com/subject/1293350/</span><br><span class="line">50    飞越疯人院    9.1    373765    https://movie.douban.com/subject/1292224/</span><br><span class="line">51    指环王2：双塔奇兵    9.0    405233    https://movie.douban.com/subject/1291572/</span><br><span class="line">52    教父2    9.2    291589    https://movie.douban.com/subject/1299131/</span><br><span class="line">53    指环王1：魔戒再现    9.0    454776    https://movie.douban.com/subject/1291571/</span><br><span class="line">54    狮子王    9.0    441123    https://movie.douban.com/subject/1301753/</span><br><span class="line">55    V字仇杀队    8.9    634942    https://movie.douban.com/subject/1309046/</span><br><span class="line">56    美丽心灵    9.0    442940    https://movie.douban.com/subject/1306029/</span><br><span class="line">57    饮食男女    9.1    312944    https://movie.douban.com/subject/1291818/</span><br><span class="line">58    海豚湾    9.3    246512    https://movie.douban.com/subject/3442220/</span><br><span class="line">59    情书    8.9    544709    https://movie.douban.com/subject/1292220/</span><br><span class="line">60    何以为家    9.1    353458    https://movie.douban.com/subject/30170448/</span><br><span class="line">61    钢琴家    9.1    293055    https://movie.douban.com/subject/1296736/</span><br><span class="line">62    大闹天宫    9.3    190080    https://movie.douban.com/subject/1418019/</span><br><span class="line">63    本杰明·巴顿奇事    8.9    577017    https://movie.douban.com/subject/1485260/</span><br><span class="line">64    哈利·波特与魔法石    8.9    466720    https://movie.douban.com/subject/1295038/</span><br><span class="line">65    看不见的客人    8.8    635451    https://movie.douban.com/subject/26580232/</span><br><span class="line">66    黑客帝国    8.9    434713    https://movie.douban.com/subject/1291843/</span><br><span class="line">67    西西里的美丽传说    8.8    552815    https://movie.douban.com/subject/1292402/</span><br><span class="line">68    小鞋子    9.2    218270    https://movie.douban.com/subject/1303021/</span><br><span class="line">69    美国往事    9.2    248262    https://movie.douban.com/subject/1292262/</span><br><span class="line">70    拯救大兵瑞恩    9.0    370031    https://movie.douban.com/subject/1292849/</span><br><span class="line">71    让子弹飞    8.8    937467    https://movie.douban.com/subject/3742360/</span><br><span class="line">72    音乐之声    9.0    340645    https://movie.douban.com/subject/1294408/</span><br><span class="line">73    致命魔术    8.8    497893    https://movie.douban.com/subject/1780330/</span><br><span class="line">74    猫鼠游戏    8.9    404409    https://movie.douban.com/subject/1305487/</span><br><span class="line">75    七宗罪    8.8    593674    https://movie.douban.com/subject/1292223/</span><br><span class="line">76    被嫌弃的松子的一生    8.9    445775    https://movie.douban.com/subject/1787291/</span><br><span class="line">77    低俗小说    8.8    494334    https://movie.douban.com/subject/1291832/</span><br><span class="line">78    沉默的羔羊    8.8    497708    https://movie.douban.com/subject/1293544/</span><br><span class="line">79    蝴蝶效应    8.8    548478    https://movie.douban.com/subject/1292343/</span><br><span class="line">80    春光乍泄    8.9    367593    https://movie.douban.com/subject/1292679/</span><br><span class="line">81    勇敢的心    8.9    388081    https://movie.douban.com/subject/1294639/</span><br><span class="line">82    天使爱美丽    8.7    657882    https://movie.douban.com/subject/1292215/</span><br><span class="line">83    穿条纹睡衣的男孩    9.0    256883    https://movie.douban.com/subject/3008247/</span><br><span class="line">84    剪刀手爱德华    8.7    675841    https://movie.douban.com/subject/1292370/</span><br><span class="line">85    心灵捕手    8.8    402941    https://movie.douban.com/subject/1292656/</span><br><span class="line">86    禁闭岛    8.8    537386    https://movie.douban.com/subject/2334904/</span><br><span class="line">87    布达佩斯大饭店    8.8    500379    https://movie.douban.com/subject/11525673/</span><br><span class="line">88    阿凡达    8.7    787025    https://movie.douban.com/subject/1652587/</span><br><span class="line">89    入殓师    8.8    401708    https://movie.douban.com/subject/2149806/</span><br><span class="line">90    幽灵公主    8.9    336781    https://movie.douban.com/subject/1297359/</span><br><span class="line">91    加勒比海盗    8.7    519035    https://movie.douban.com/subject/1298070/</span><br><span class="line">92    摩登时代    9.3    148862    https://movie.douban.com/subject/1294371/</span><br><span class="line">93    致命ID    8.7    455343    https://movie.douban.com/subject/1297192/</span><br><span class="line">94    断背山    8.7    448806    https://movie.douban.com/subject/1418834/</span><br><span class="line">95    阳光灿烂的日子    8.8    379539    https://movie.douban.com/subject/1291875/</span><br><span class="line">96    重庆森林    8.7    471704    https://movie.douban.com/subject/1291999/</span><br><span class="line">97    第六感    8.8    326415    https://movie.douban.com/subject/1297630/</span><br><span class="line">98    狩猎    9.1    196797    https://movie.douban.com/subject/6985810/</span><br><span class="line">99    喜剧之王    8.7    513460    https://movie.douban.com/subject/1302425/</span><br><span class="line">100    玛丽和马克思    8.9    290154    https://movie.douban.com/subject/3072124/</span><br><span class="line">101    消失的爱人    8.7    525034    https://movie.douban.com/subject/21318488/</span><br><span class="line">102    告白    8.7    467513    https://movie.douban.com/subject/4268598/</span><br><span class="line">103    小森林 夏秋篇    9.0    226137    https://movie.douban.com/subject/25814705/</span><br><span class="line">104    大鱼    8.8    347484    https://movie.douban.com/subject/1291545/</span><br><span class="line">105    一一    9.0    210191    https://movie.douban.com/subject/1292434/</span><br><span class="line">106    阳光姐妹淘    8.8    378032    https://movie.douban.com/subject/4917726/</span><br><span class="line">107    爱在黎明破晓前    8.8    326958    https://movie.douban.com/subject/1296339/</span><br><span class="line">108    请以你的名字呼唤我    8.8    327024    https://movie.douban.com/subject/26799731/</span><br><span class="line">109    射雕英雄传之东成西就    8.7    384745    https://movie.douban.com/subject/1316510/</span><br><span class="line">110    甜蜜蜜    8.8    307227    https://movie.douban.com/subject/1305164/</span><br><span class="line">111    侧耳倾听    8.9    256439    https://movie.douban.com/subject/1297052/</span><br><span class="line">112    红辣椒    8.9    210659    https://movie.douban.com/subject/1865703/</span><br><span class="line">113    驯龙高手    8.7    438648    https://movie.douban.com/subject/2353023/</span><br><span class="line">114    倩女幽魂    8.7    399855    https://movie.douban.com/subject/1297447/</span><br><span class="line">115    超脱    8.8    256836    https://movie.douban.com/subject/5322596/</span><br><span class="line">116    杀人回忆    8.8    314334    https://movie.douban.com/subject/1300299/</span><br><span class="line">117    海蒂和爷爷    9.1    142601    https://movie.douban.com/subject/25958717/</span><br><span class="line">118    恐怖直播    8.7    349058    https://movie.douban.com/subject/21360417/</span><br><span class="line">119    菊次郎的夏天    8.8    284490    https://movie.douban.com/subject/1293359/</span><br><span class="line">120    爱在日落黄昏时    8.8    285141    https://movie.douban.com/subject/1291990/</span><br><span class="line">121    7号房的礼物    8.8    276596    https://movie.douban.com/subject/10777687/</span><br><span class="line">122    小森林 冬春篇    9.0    196346    https://movie.douban.com/subject/25814707/</span><br><span class="line">123    风之谷    8.8    246043    https://movie.douban.com/subject/1291585/</span><br><span class="line">124    哈利·波特与死亡圣器(下)    8.7    408422    https://movie.douban.com/subject/3011235/</span><br><span class="line">125    我不是药神    9.0    1181641    https://movie.douban.com/subject/26752088/</span><br><span class="line">126    幸福终点站    8.7    310524    https://movie.douban.com/subject/1292274/</span><br><span class="line">127    蝙蝠侠：黑暗骑士崛起    8.7    415939    https://movie.douban.com/subject/3395373/</span><br><span class="line">128    上帝之城    8.9    200345    https://movie.douban.com/subject/1292208/</span><br><span class="line">129    萤火之森    8.8    261708    https://movie.douban.com/subject/5989818/</span><br><span class="line">130    借东西的小人阿莉埃蒂    8.8    308863    https://movie.douban.com/subject/4202302/</span><br><span class="line">131    超能陆战队    8.6    565299    https://movie.douban.com/subject/11026735/</span><br><span class="line">132    唐伯虎点秋香    8.5    545655    https://movie.douban.com/subject/1306249/</span><br><span class="line">133    神偷奶爸    8.5    572719    https://movie.douban.com/subject/3287562/</span><br><span class="line">134    无人知晓    9.1    133082    https://movie.douban.com/subject/1292337/</span><br><span class="line">135    怪兽电力公司    8.7    363701    https://movie.douban.com/subject/1291579/</span><br><span class="line">136    电锯惊魂    8.7    287704    https://movie.douban.com/subject/1417598/</span><br><span class="line">137    岁月神偷    8.7    394423    https://movie.douban.com/subject/3792799/</span><br><span class="line">138    玩具总动员3    8.8    278994    https://movie.douban.com/subject/1858711/</span><br><span class="line">139    血战钢锯岭    8.7    472814    https://movie.douban.com/subject/26325320/</span><br><span class="line">140    谍影重重3    8.8    254835    https://movie.douban.com/subject/1578507/</span><br><span class="line">141    疯狂原始人    8.7    518689    https://movie.douban.com/subject/1907966/</span><br><span class="line">142    七武士    9.2    108944    https://movie.douban.com/subject/1295399/</span><br><span class="line">143    英雄本色    8.7    276917    https://movie.douban.com/subject/1297574/</span><br><span class="line">144    喜宴    8.9    195228    https://movie.douban.com/subject/1303037/</span><br><span class="line">145    真爱至上    8.6    430547    https://movie.douban.com/subject/1292401/</span><br><span class="line">146    萤火虫之墓    8.7    272296    https://movie.douban.com/subject/1293318/</span><br><span class="line">147    东邪西毒    8.6    362487    https://movie.douban.com/subject/1292328/</span><br><span class="line">148    傲慢与偏见    8.5    430151    https://movie.douban.com/subject/1418200/</span><br><span class="line">149    时空恋旅人    8.7    302907    https://movie.douban.com/subject/10577869/</span><br><span class="line">150    贫民窟的百万富翁    8.6    497991    https://movie.douban.com/subject/2209573/</span><br><span class="line">151    黑天鹅    8.5    549429    https://movie.douban.com/subject/1978709/</span><br><span class="line">152    记忆碎片    8.6    373474    https://movie.douban.com/subject/1304447/</span><br><span class="line">153    心迷宫    8.7    274327    https://movie.douban.com/subject/25917973/</span><br><span class="line">154    纵横四海    8.8    226602    https://movie.douban.com/subject/1295409/</span><br><span class="line">155    教父3    8.8    191865    https://movie.douban.com/subject/1294240/</span><br><span class="line">156    荒蛮故事    8.8    223635    https://movie.douban.com/subject/24750126/</span><br><span class="line">157    完美的世界    9.1    123076    https://movie.douban.com/subject/1300992/</span><br><span class="line">158    达拉斯买家俱乐部    8.7    264828    https://movie.douban.com/subject/1793929/</span><br><span class="line">159    雨人    8.7    267637    https://movie.douban.com/subject/1291870/</span><br><span class="line">160    三块广告牌    8.7    493952    https://movie.douban.com/subject/26611804/</span><br><span class="line">161    花样年华    8.6    337477    https://movie.douban.com/subject/1291557/</span><br><span class="line">162    被解救的姜戈    8.7    357721    https://movie.douban.com/subject/6307447/</span><br><span class="line">163    卢旺达饭店    8.9    161524    https://movie.douban.com/subject/1291822/</span><br><span class="line">164    你的名字。    8.4    757251    https://movie.douban.com/subject/26683290/</span><br><span class="line">165    海边的曼彻斯特    8.6    294826    https://movie.douban.com/subject/25980443/</span><br><span class="line">166    我是山姆    8.9    155512    https://movie.douban.com/subject/1306861/</span><br><span class="line">167    头脑特工队    8.7    340013    https://movie.douban.com/subject/10533913/</span><br><span class="line">168    你看起来好像很好吃    8.8    202385    https://movie.douban.com/subject/4848115/</span><br><span class="line">169    恋恋笔记本    8.5    385616    https://movie.douban.com/subject/1309163/</span><br><span class="line">170    哪吒闹海    9.0    129640    https://movie.douban.com/subject/1307315/</span><br><span class="line">171    无敌破坏王    8.7    306834    https://movie.douban.com/subject/6534248/</span><br><span class="line">172    虎口脱险    8.9    141090    https://movie.douban.com/subject/1296909/</span><br><span class="line">173    冰川时代    8.5    379209    https://movie.douban.com/subject/1291578/</span><br><span class="line">174    二十二    8.7    168873    https://movie.douban.com/subject/26430107/</span><br><span class="line">175    海洋    9.0    116507    https://movie.douban.com/subject/3443389/</span><br><span class="line">176    雨中曲    9.0    125013    https://movie.douban.com/subject/1293460/</span><br><span class="line">177    爆裂鼓手    8.7    324492    https://movie.douban.com/subject/25773932/</span><br><span class="line">178    未麻的部屋    8.9    147477    https://movie.douban.com/subject/1395091/</span><br><span class="line">179    模仿游戏    8.6    355368    https://movie.douban.com/subject/10463953/</span><br><span class="line">180    一个叫欧维的男人决定去死    8.8    195643    https://movie.douban.com/subject/26628357/</span><br><span class="line">181    忠犬八公物语    9.1    96747    https://movie.douban.com/subject/1959195/</span><br><span class="line">182    燃情岁月    8.8    185142    https://movie.douban.com/subject/1295865/</span><br><span class="line">183    人工智能    8.6    258634    https://movie.douban.com/subject/1302827/</span><br><span class="line">184    魔女宅急便    8.6    281054    https://movie.douban.com/subject/1307811/</span><br><span class="line">185    房间    8.8    229618    https://movie.douban.com/subject/25724855/</span><br><span class="line">186    穿越时空的少女    8.6    250139    https://movie.douban.com/subject/1937946/</span><br><span class="line">187    天书奇谭    9.1    91667    https://movie.douban.com/subject/1428581/</span><br><span class="line">188    恐怖游轮    8.4    459129    https://movie.douban.com/subject/3011051/</span><br><span class="line">189    魂断蓝桥    8.8    164770    https://movie.douban.com/subject/1293964/</span><br><span class="line">190    黑客帝国3：矩阵革命    8.7    225709    https://movie.douban.com/subject/1302467/</span><br><span class="line">191    海街日记    8.7    214152    https://movie.douban.com/subject/25895901/</span><br><span class="line">192    猜火车    8.5    306564    https://movie.douban.com/subject/1292528/</span><br><span class="line">193    罗生门    8.8    175470    https://movie.douban.com/subject/1291879/</span><br><span class="line">194    完美陌生人    8.5    333893    https://movie.douban.com/subject/26614893/</span><br><span class="line">195    阿飞正传    8.5    295833    https://movie.douban.com/subject/1305690/</span><br><span class="line">196    头号玩家    8.7    823877    https://movie.douban.com/subject/4920389/</span><br><span class="line">197    香水    8.5    362383    https://movie.douban.com/subject/1760622/</span><br><span class="line">198    功夫    8.4    465611    https://movie.douban.com/subject/1291543/</span><br><span class="line">199    可可西里    8.7    171199    https://movie.douban.com/subject/1308857/</span><br><span class="line">200    朗读者    8.5    333438    https://movie.douban.com/subject/2213597/</span><br><span class="line">201    谍影重重2    8.6    219036    https://movie.douban.com/subject/1308767/</span><br><span class="line">202    浪潮    8.7    173378    https://movie.douban.com/subject/2297265/</span><br><span class="line">203    牯岭街少年杀人事件    8.8    149429    https://movie.douban.com/subject/1292329/</span><br><span class="line">204    谍影重重    8.6    261073    https://movie.douban.com/subject/1304102/</span><br><span class="line">205    战争之王    8.6    224942    https://movie.douban.com/subject/1419936/</span><br><span class="line">206    地球上的星星    8.9    120790    https://movie.douban.com/subject/2363506/</span><br><span class="line">207    疯狂的石头    8.4    452026    https://movie.douban.com/subject/1862151/</span><br><span class="line">208    初恋这件小事    8.3    633902    https://movie.douban.com/subject/4739952/</span><br><span class="line">209    青蛇    8.5    303900    https://movie.douban.com/subject/1303394/</span><br><span class="line">210    惊魂记    8.9    120359    https://movie.douban.com/subject/1293181/</span><br><span class="line">211    终结者2：审判日    8.6    198690    https://movie.douban.com/subject/1291844/</span><br><span class="line">212    源代码    8.4    520617    https://movie.douban.com/subject/3075287/</span><br><span class="line">213    爱在午夜降临前    8.8    167120    https://movie.douban.com/subject/10808442/</span><br><span class="line">214    步履不停    8.8    139427    https://movie.douban.com/subject/2222996/</span><br><span class="line">215    新龙门客栈    8.5    258004    https://movie.douban.com/subject/1292287/</span><br><span class="line">216    奇迹男孩    8.6    323039    https://movie.douban.com/subject/26787574/</span><br><span class="line">217    小萝莉的猴神大叔    8.5    271364    https://movie.douban.com/subject/26393561/</span><br><span class="line">218    追随    8.9    108391    https://movie.douban.com/subject/1397546/</span><br><span class="line">219    一次别离    8.7    168140    https://movie.douban.com/subject/5964718/</span><br><span class="line">220    无耻混蛋    8.5    294062    https://movie.douban.com/subject/1438652/</span><br><span class="line">221    再次出发之纽约遇见你    8.5    245335    https://movie.douban.com/subject/6874403/</span><br><span class="line">222    釜山行    8.4    561902    https://movie.douban.com/subject/25986180/</span><br><span class="line">223    血钻    8.6    196331    https://movie.douban.com/subject/1428175/</span><br><span class="line">224    东京物语    9.2    72955    https://movie.douban.com/subject/1291568/</span><br><span class="line">225    撞车    8.6    219372    https://movie.douban.com/subject/1388216/</span><br><span class="line">226    彗星来的那一夜    8.5    276087    https://movie.douban.com/subject/25807345/</span><br><span class="line">227    城市之光    9.3    65047    https://movie.douban.com/subject/1293908/</span><br><span class="line">228    2001太空漫游    8.7    149476    https://movie.douban.com/subject/1292226/</span><br><span class="line">229    梦之安魂曲    8.7    144757    https://movie.douban.com/subject/1292270/</span><br><span class="line">230    新世界    8.7    149430    https://movie.douban.com/subject/10437779/</span><br><span class="line">231    绿里奇迹    8.7    145109    https://movie.douban.com/subject/1300374/</span><br><span class="line">232    疯狂的麦克斯4：狂暴之路    8.6    296326    https://movie.douban.com/subject/3592854/</span><br><span class="line">233    聚焦    8.8    172697    https://movie.douban.com/subject/25954475/</span><br><span class="line">234    E.T. 外星人    8.5    211210    https://movie.douban.com/subject/1294638/</span><br><span class="line">235    这个男人来自地球    8.5    244977    https://movie.douban.com/subject/2300586/</span><br><span class="line">236    末路狂花    8.7    138086    https://movie.douban.com/subject/1291992/</span><br><span class="line">237    黑鹰坠落    8.6    169479    https://movie.douban.com/subject/1291824/</span><br><span class="line">238    发条橙    8.5    237973    https://movie.douban.com/subject/1292233/</span><br><span class="line">239    遗愿清单    8.6    191251    https://movie.douban.com/subject/1867345/</span><br><span class="line">240    变脸    8.4    272586    https://movie.douban.com/subject/1292659/</span><br><span class="line">241    勇闯夺命岛    8.6    182137    https://movie.douban.com/subject/1292728/</span><br><span class="line">242    国王的演讲    8.4    435891    https://movie.douban.com/subject/4023638/</span><br><span class="line">243    我爱你    9.0    84663    https://movie.douban.com/subject/5908478/</span><br><span class="line">244    黄金三镖客    9.1    71082    https://movie.douban.com/subject/1401118/</span><br><span class="line">245    千钧一发    8.7    131207    https://movie.douban.com/subject/1300117/</span><br><span class="line">246    非常嫌疑犯    8.6    163295    https://movie.douban.com/subject/1292214/</span><br><span class="line">247    秒速5厘米    8.3    412652    https://movie.douban.com/subject/2043546/</span><br><span class="line">248    驴得水    8.3    502838    https://movie.douban.com/subject/25921812/</span><br><span class="line">249    卡萨布兰卡    8.6    160541    https://movie.douban.com/subject/1296753/</span><br><span class="line">250    四个春天    8.9    87331    https://movie.douban.com/subject/27191492/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP foreach循环使用&amp;引用的小坑</title>
      <link href="/2019/08/07/PHP-foreach%E5%BE%AA%E7%8E%AF%E4%BD%BF%E7%94%A8-%E5%BC%95%E7%94%A8%E7%9A%84%E5%B0%8F%E5%9D%91/"/>
      <url>/2019/08/07/PHP-foreach%E5%BE%AA%E7%8E%AF%E4%BD%BF%E7%94%A8-%E5%BC%95%E7%94%A8%E7%9A%84%E5%B0%8F%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p>源起：今天有小🔥伴发了一段 <code>PHP</code> 代码问执行结果和常规逻辑思考🤔结果为啥么不一样。代码如下，当时只是说和 <code>foreach</code> 使用 <code>&amp;</code> 有关。也没深入思考到底是什么关系，午睡过后，心血来潮的想搞搞这个问题，故做如下记录。<a id="more"></a></p><p><strong>小伙伴给的原始代码如下</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    $arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> &amp;$val) &#123;</span><br><span class="line">        <span class="comment">//四次循环迭代后依次输出 1, 2, 4, 8; 没任何毛病</span></span><br><span class="line">        <span class="keyword">echo</span> $val . PHP_EOL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    print_r($arr);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"************************"</span> . PHP_EOL;</span><br><span class="line">    <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $val) &#123;</span><br><span class="line">        print_r($arr);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> $val . PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"###################"</span> . PHP_EOL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//echo 依次打印的是： 1，2，4，4 [(O_O)]?</span></span><br></pre></td></tr></table></figure><p><strong>代码执行结果如下图</strong></p><p><img src="/images/blog/201908/0-PHP-foreach%E5%BE%AA%E7%8E%AF%E4%BD%BF%E7%94%A8-%E5%BC%95%E7%94%A8%E7%9A%84%E5%B0%8F%E5%9D%91.jpeg" alt></p><p>那么问题来了，第一次输出 <code>1，2，4，8</code> 没有任何问题。但是，但是，但是为什么第二次输出的是 <code>1, 2, 4, 4</code> 而不是 <code>1、2 4、8</code> 呢？查询 <a href="https://www.php.net/manual/zh/control-structures.foreach.php" target="_blank" rel="noopener">PHP foreach 文档</a> 有辣么一句特别提醒</p><h6 id="Warning-数组最后一个元素的-value-引用在-foreach-循环之后仍会保留。建议使用-unset-来将其销毁。"><a href="#Warning-数组最后一个元素的-value-引用在-foreach-循环之后仍会保留。建议使用-unset-来将其销毁。" class="headerlink" title="Warning 数组最后一个元素的 $value 引用在 foreach 循环之后仍会保留。建议使用 unset() 来将其销毁。"></a><code>Warning 数组最后一个元素的 $value 引用在 foreach 循环之后仍会保留。建议使用 unset() 来将其销毁。</code></h6><p>看此提示，冥冥之中好像知道了答案。</p><ul><li>第一次 <code>foreach</code> 由于使用的是 <code>&amp; 引用赋值</code>，在循环完成后如果没有 <code>unset($val)</code> 会保留最后一个元素的 <code>$val引用</code></li></ul><ul><li>第二次 <code>foreach</code> 由于使用的和第一次同样的迭代变量 <code>$val</code>,  数组的最后一个元素 <code>$arr[3]</code> 和当前循环迭代值 <code>$val</code> 指向同一个变量地址，此时 <code>$val</code> 值改变时 <code>$arr[3]</code> 的值也跟着改变了。</li></ul><p><strong>用上图说明</strong></p><ul><li><p>原始数组为图中 <code>A区域</code> 数组</p></li><li><p>第 <code>0</code> 次循环迭代：最后一个元素 <code>$arr[3]</code> 和 <code>$val 即($arr[0])</code> 值相同。<code>$arr[3] = $val = 1</code>，如图中 <code>0区域</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] =&gt; 1</span><br><span class="line">    [1] =&gt; 2</span><br><span class="line">    [2] =&gt; 4</span><br><span class="line">    [3] =&gt; 1</span><br><span class="line">)</span><br><span class="line">第0次循环结果：1</span><br></pre></td></tr></table></figure></li><li><p>第 <code>1</code> 次循环迭代：最后一个元素 <code>$arr[3]</code> 和 <code>$val 即($arr[1])</code> 值相同。<code>$arr[3] = $val = 2</code>，如图中 <code>1区域</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] =&gt; 1</span><br><span class="line">    [1] =&gt; 2</span><br><span class="line">    [2] =&gt; 4</span><br><span class="line">    [3] =&gt; 2</span><br><span class="line">)</span><br><span class="line">第1次循环结果：2</span><br></pre></td></tr></table></figure></li><li><p>第 <code>2</code> 次循环迭代：最后一个元素 <code>$arr[3]</code> 和 <code>$val 即($arr[2])</code> 值相同。<code>$arr[3] = $val = 4</code>，如图中 <code>2区域</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] =&gt; 1</span><br><span class="line">    [1] =&gt; 2</span><br><span class="line">    [2] =&gt; 4</span><br><span class="line">    [3] =&gt; 4</span><br><span class="line">)</span><br><span class="line">第2次循环结果：4</span><br></pre></td></tr></table></figure></li><li><p>第 <code>3</code> 次循环迭代：最后一个元素 <code>$arr[3]</code> 和 <code>$val 即($arr[3])</code> 值相同。<code>$arr[3] = $val = 4</code>，如图中 <code>3区域</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] =&gt; 1</span><br><span class="line">    [1] =&gt; 2</span><br><span class="line">    [2] =&gt; 4</span><br><span class="line">    [3] =&gt; 4</span><br><span class="line">)</span><br><span class="line">第2次循环结果：4</span><br></pre></td></tr></table></figure></li><li><p>综上，第二次循环 <code>1, 2, 4, 4</code> 就是这么来的 😜</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang爬虫系列零：爬取百度贴吧内容</title>
      <link href="/2019/08/04/golang%E7%88%AC%E5%8F%96%E7%99%BE%E5%BA%A6%E8%B4%B4%E5%90%A7%E5%86%85%E5%AE%B9/"/>
      <url>/2019/08/04/golang%E7%88%AC%E5%8F%96%E7%99%BE%E5%BA%A6%E8%B4%B4%E5%90%A7%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<h6 id="声明：以下内容仅供技术学习"><a href="#声明：以下内容仅供技术学习" class="headerlink" title="声明：以下内容仅供技术学习"></a>声明：以下内容仅供技术学习</h6><h5 id="爬虫实现步骤"><a href="#爬虫实现步骤" class="headerlink" title="爬虫实现步骤"></a>爬虫实现步骤</h5><p>1：获取需要爬取URL的地址（以 <a href="http://tieba.baidu.com/f?kw=javascript&ie=utf-8" target="_blank" rel="noopener"><code>JavaScript吧</code></a> 举例）</p><a id="more"></a><pre><code>http://tieba.baidu.com/f?kw=javascript&amp;ie=utf-8&amp;pn=0http://tieba.baidu.com/f?kw=javascript&amp;ie=utf-8&amp;pn=50http://tieba.baidu.com/f?kw=javascript&amp;ie=utf-8&amp;pn=150</code></pre><p>2：使用 http.Get(url) 获取到每一个URL的内容</p><p>3：将或得到URL的内容写入文件</p><p><strong>注意文件命名</strong></p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"io"</span></span><br><span class="line">    <span class="string">"strconv"</span></span><br><span class="line">    <span class="string">"os"</span></span><br><span class="line">    <span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//贴吧的URL</span></span><br><span class="line"><span class="comment">//http://tieba.baidu.com/f?kw=javascript&amp;ie=utf-8&amp;pn=0</span></span><br><span class="line"><span class="comment">//http://tieba.baidu.com/f?kw=javascript&amp;ie=utf-8&amp;pn=50</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    start := time.Now()</span><br><span class="line">    <span class="comment">//确认起始页和终止页</span></span><br><span class="line">    <span class="keyword">var</span> startPage <span class="keyword">int</span></span><br><span class="line">    <span class="keyword">var</span> endPage <span class="keyword">int</span></span><br><span class="line">    fmt.Print(<span class="string">"请输入起始页:"</span>)</span><br><span class="line">    fmt.Scanln(&amp;startPage)</span><br><span class="line">    <span class="keyword">if</span> startPage &lt;= <span class="number">1</span> &#123;</span><br><span class="line">        startPage = <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fmt.Print(<span class="string">"请输入终止页:"</span>)</span><br><span class="line">    fmt.Scanln(&amp;endPage)</span><br><span class="line">    <span class="keyword">if</span> endPage &lt;= <span class="number">1</span> &#123;</span><br><span class="line">        endPage = <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    working(startPage, endPage)</span><br><span class="line">    cost := time.Since(start)</span><br><span class="line">    fmt.Printf(<span class="string">"耗时 = [%s] "</span>, cost)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">working</span><span class="params">(startPage, endPage <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"正在爬取第%d页到%d页的信息...\n"</span>, startPage, endPage)</span><br><span class="line"></span><br><span class="line">    pageChan := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line">    <span class="comment">//循环爬取每一页</span></span><br><span class="line">    <span class="keyword">for</span> i := startPage; i &lt;= endPage; i++ &#123;</span><br><span class="line">        <span class="comment">//开启协程</span></span><br><span class="line">        <span class="keyword">go</span> SpiderPage(i, pageChan)</span><br><span class="line">        <span class="comment">//SpiderPage(i, pageChan)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i := startPage; i &lt;= endPage; i++ &#123;</span><br><span class="line">        <span class="comment">//开启协程</span></span><br><span class="line">        fmt.Printf(<span class="string">"第 %d 页 爬取完成\n"</span>, &lt;-pageChan)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//爬取单个页面的函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SpiderPage</span><span class="params">(i <span class="keyword">int</span>, pageChan <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    baseUrl := <span class="string">"http://tieba.baidu.com/f?kw=javascript&amp;ie=utf-8&amp;pn="</span> + strconv.Itoa((i<span class="number">-1</span>)*<span class="number">50</span>)</span><br><span class="line">    fmt.Println(<span class="string">"正在获取第"</span>, i, <span class="string">"页的内容"</span>)</span><br><span class="line">    result, err := httpGetUrl(baseUrl)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"http get error, Msg"</span>, err.Error())</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将读取到的数据存储存储为文件</span></span><br><span class="line">    file, err := os.Create(<span class="string">"JavaScript_"</span> + strconv.Itoa(i) + <span class="string">".html"</span>)</span><br><span class="line">    <span class="keyword">if</span> err != err &#123;</span><br><span class="line">        fmt.Println(<span class="string">"os Create err："</span>, err.Error())</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    file.WriteString(result)</span><br><span class="line">    file.Close() <span class="comment">//保存好一个文件就关闭一个文件</span></span><br><span class="line">    pageChan &lt;- i</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//爬取内容</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">httpGetUrl</span><span class="params">(url <span class="keyword">string</span>)</span> <span class="params">(result <span class="keyword">string</span>, err error)</span></span> &#123;</span><br><span class="line">    resp, err1 := http.Get(url)</span><br><span class="line">    <span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line">        err = err1</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//关闭</span></span><br><span class="line">    <span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取数据</span></span><br><span class="line">    buffer := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">8196</span>)</span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        <span class="comment">//读取的内容至于buffer容器</span></span><br><span class="line">        n, err2 := resp.Body.Read(buffer)</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">            fmt.Println(<span class="string">"读取网页完成"</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> err2 != <span class="literal">nil</span> &amp;&amp; err2 != io.EOF &#123;</span><br><span class="line">            err = err2</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//累次相加每一次读到的Buffer数据，存入result, 一次性返回</span></span><br><span class="line">        result += <span class="keyword">string</span>(buffer[:n])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序员数学基础 之 矩阵</title>
      <link href="/2019/08/03/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%9F%A9%E9%98%B5/"/>
      <url>/2019/08/03/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%9F%A9%E9%98%B5/</url>
      
        <content type="html"><![CDATA[<h6 id="1：矩阵相加"><a href="#1：矩阵相加" class="headerlink" title="1：矩阵相加"></a>1：矩阵相加</h6><a id="more"></a><p><img src="/images/blog/201908/1-%E7%9F%A9%E9%98%B5%E7%9B%B8%E5%8A%A0.jpg" alt></p><h6 id="2：矩阵相乘（不符合交换律）"><a href="#2：矩阵相乘（不符合交换律）" class="headerlink" title="2：矩阵相乘（不符合交换律）"></a>2：矩阵相乘（不符合交换律）</h6><ul><li><p>标量 * 矩阵</p><ul><li>变量 * 矩阵的每一个元素，得到一个新矩阵</li></ul></li><li><p>矩阵 * 矩阵</p><ul><li><p>用矩阵的 第1行 分别去 乘以 矩阵的每一列</p></li><li><p>用矩阵的 第N行 分别去 乘以 矩阵的每一列</p></li></ul></li></ul><p><img src="/images/blog/201908/2-%E7%9F%A9%E9%98%B5%E4%B9%98%E4%B8%8A%E7%9F%A9%E9%98%B5.jpg" alt></p><ul><li><p>矩阵A * 矩阵B != 矩阵B * 矩阵A</p></li><li><p>矩阵相乘的条件：前面矩阵的列数 等于 后面矩阵的行数</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 部署测试</title>
      <link href="/2019/08/02/hexo-test-deploy/"/>
      <url>/2019/08/02/hexo-test-deploy/</url>
      
        <content type="html"><![CDATA[<h4 id="Hexo-部署测试"><a href="#Hexo-部署测试" class="headerlink" title="Hexo 部署测试"></a>Hexo 部署测试</h4><h5 id="1：通过日志方式统计"><a href="#1：通过日志方式统计" class="headerlink" title="1：通过日志方式统计"></a>1：通过日志方式统计</h5><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">file_put_contents(<span class="string">"loc.log"</span>, microtime(<span class="keyword">true</span>).<span class="string">'_end'</span>.<span class="string">"-----$lat@2"</span>.PHP_EOL, FILE_APPEND);</span><br><span class="line"></span><br><span class="line">file_put_contents(<span class="string">'exelog/'</span>.time().<span class="string">'.log'</span>, var_export(Yii::$app-&gt;request-&gt;post(), <span class="keyword">true</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$postdata = file_get_contents(<span class="string">"php://input"</span>);</span><br><span class="line">$postdata = json_decode($postdata,<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure><h5 id="2：二维数组指定字段排序"><a href="#2：二维数组指定字段排序" class="headerlink" title="2：二维数组指定字段排序"></a>2：二维数组指定字段排序</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">array_multisort (array_column($citiesMddBaseInfo, ‘hot’), SORT_DESC, $citiesMddBaseInfo);</span><br><span class="line"></span><br><span class="line">array_multisort(array_column($hotelList, <span class="string">'price'</span>), SORT_ASC, $hotelList);</span><br><span class="line"></span><br><span class="line">array_multisort($hotelList,SORT_ASC, array_column($hotelList, <span class="string">'price'</span>));</span><br></pre></td></tr></table></figure><p><img src="/images/blog/201908/tom.jpg" alt></p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
